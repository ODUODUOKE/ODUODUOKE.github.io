<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>git 拉取远端所有分支</title>
    <url>/2023/04/21/GIT%E7%9B%B8%E5%85%B3/Git%E6%8B%89%E5%8F%96%E8%BF%9C%E7%AB%AF%E6%89%80%E6%9C%89%E5%88%86%E6%94%AF/</url>
    <content><![CDATA[<p><a href="https://blog.csdn.net/weixin_42253753/article/details/116917450">CSDN博客原文参考地址</a></p>
<h2 id="关键命令代码"><a href="#关键命令代码" class="headerlink" title="关键命令代码"></a>关键命令代码</h2><blockquote>
<p>git branch -r | grep -v ‘-&gt;’ | while read remote; do git branch –track “${remote#origin&#x2F;}” “$remote”; done<br>git fetch –all<br>git pull –all</p>
</blockquote>
<hr>
<h2 id="操作步骤截图"><a href="#操作步骤截图" class="headerlink" title="操作步骤截图"></a>操作步骤截图</h2><h3 id="通过-git-bash-窗口输入git-clone-命令"><a href="#通过-git-bash-窗口输入git-clone-命令" class="headerlink" title="通过 git bash 窗口输入git clone 命令"></a>通过 git bash 窗口输入git clone 命令</h3><p><img src="/2023/04/21/GIT%E7%9B%B8%E5%85%B3/Git%E6%8B%89%E5%8F%96%E8%BF%9C%E7%AB%AF%E6%89%80%E6%9C%89%E5%88%86%E6%94%AF/1.jpg" title="通过 git bash 窗口输入git clone 命令"></p>
<h3 id="克隆项目到本地"><a href="#克隆项目到本地" class="headerlink" title="克隆项目到本地"></a>克隆项目到本地</h3><p><img src="/2023/04/21/GIT%E7%9B%B8%E5%85%B3/Git%E6%8B%89%E5%8F%96%E8%BF%9C%E7%AB%AF%E6%89%80%E6%9C%89%E5%88%86%E6%94%AF/2.jpg" title="克隆项目到本地"></p>
<h3 id="进入项目-jmt-lp-文件夹目录下"><a href="#进入项目-jmt-lp-文件夹目录下" class="headerlink" title="进入项目 jmt_lp 文件夹目录下"></a>进入项目 jmt_lp 文件夹目录下</h3><p><img src="/2023/04/21/GIT%E7%9B%B8%E5%85%B3/Git%E6%8B%89%E5%8F%96%E8%BF%9C%E7%AB%AF%E6%89%80%E6%9C%89%E5%88%86%E6%94%AF/3.jpg" title="进入项目 jmt_lp 文件夹目录下"></p>
<h3 id="执行以下命令"><a href="#执行以下命令" class="headerlink" title="执行以下命令"></a>执行以下命令</h3><p><code>git branch -r | grep -v &#39;\-&gt;&#39; | while read remote; do git branch --track &quot;$&#123;remote#origin/&#125;&quot; &quot;$remote&quot;; done git fetch --all git pull --all </code></p>
<h2 id="下载所有分支代码"><a href="#下载所有分支代码" class="headerlink" title="下载所有分支代码"></a>下载所有分支代码</h2><p><img src="/2023/04/21/GIT%E7%9B%B8%E5%85%B3/Git%E6%8B%89%E5%8F%96%E8%BF%9C%E7%AB%AF%E6%89%80%E6%9C%89%E5%88%86%E6%94%AF/4.jpg" title="下载所有分支代码"></p>
<h2 id="打开Idea查看项目所有分支代码下载结果"><a href="#打开Idea查看项目所有分支代码下载结果" class="headerlink" title="打开Idea查看项目所有分支代码下载结果"></a>打开Idea查看项目所有分支代码下载结果</h2><p><img src="/2023/04/21/GIT%E7%9B%B8%E5%85%B3/Git%E6%8B%89%E5%8F%96%E8%BF%9C%E7%AB%AF%E6%89%80%E6%9C%89%E5%88%86%E6%94%AF/5.jpg" title="打开Idea查看项目所有分支代码下载结果"></p>
]]></content>
      <categories>
        <category>GIT</category>
      </categories>
      <tags>
        <tag>GIT</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo图片不显示解决</title>
    <url>/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/Hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<h2 id="安装插件及页面配置"><a href="#安装插件及页面配置" class="headerlink" title="安装插件及页面配置"></a>安装插件及页面配置</h2><br>

<p>安装插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-marked</span><br></pre></td></tr></table></figure>

<p>修改hexo根目录配置文件_config.yml</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#更改hexo设置</span><br><span class="line">post_asset_folder: true</span><br><span class="line">#添加marked插件设置</span><br><span class="line">marked:</span><br><span class="line">  prependRoot: true</span><br><span class="line">  postAsset: true</span><br></pre></td></tr></table></figure>

<p>模拟创建新页面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo n testPage</span><br></pre></td></tr></table></figure>
<p>在文件testPage.md中引入图片命令</p>
<blockquote>
<p>vscode编辑器中正常预览现实图片</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![](./testPage/test.jpg)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>hexo发布网页</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![](test.jpg)</span><br></pre></td></tr></table></figure>

<br>

<h2 id="模拟创建页面-预览效果截图"><a href="#模拟创建页面-预览效果截图" class="headerlink" title="模拟创建页面-预览效果截图"></a>模拟创建页面-预览效果截图</h2><br>

<p>Vscode中预览<strong>图片展示</strong>（图片使用的相对路径）<br><img src="/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/Hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E8%A7%A3%E5%86%B3/Snipaste_2023-04-23_21-27-55.jpg"></p>
<br>

<p>Hexo部署页面打包预览<strong>图片不展示</strong><br><img src="/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/Hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E8%A7%A3%E5%86%B3/Snipaste_2023-04-23_21-29-58.jpg"></p>
<br>

<p>Hexo部署页面打包预览<strong>图片展示</strong><br><img src="/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/Hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E8%A7%A3%E5%86%B3/Snipaste_2023-04-23_21-31-41.jpg"></p>
<h2 id="日常编辑、发布工作流"><a href="#日常编辑、发布工作流" class="headerlink" title="日常编辑、发布工作流"></a>日常编辑、发布工作流</h2><br>

<blockquote>
<p>备注：在上述插件已经安装且配置文件已如上述所示修改完成后</p>
</blockquote>
<ol>
<li>通过命令 <code>hexo n newPage</code>创建新的页面</li>
<li>复制已创建的<code>newPage</code>文件夹及<code>newPage.md</code>文件到vscode工作目录下</li>
<li>在vscode中正常书写信息、引用相关图片素材资源放置<code>newPage</code>文件夹中</li>
<li>在vscode中完成书写后，复制当前步骤[<strong>2</strong>]的文件夹及文件到hexo的工作目录下覆盖初始创建的文件夹及目录</li>
<li>全局替换hexo工作目录下<code>newPage.md</code>文件中图片引入代码<code>./newPage/</code>，使其图片目录由<code>![](./newPage/xxx.jpg)</code>为变为<code>![](xxx.jpg)</code></li>
<li>执行<code>hexo g</code>命令进行打包，运行<code>hexo s</code>命令预览页面</li>
<li>复制hexo工作目录下<code>public</code>下所有资源到相应仓库下进行提交发布即可</li>
</ol>
<h2 id="补充vscode下编辑md文件的相关插件"><a href="#补充vscode下编辑md文件的相关插件" class="headerlink" title="补充vscode下编辑md文件的相关插件"></a>补充vscode下编辑md文件的相关插件</h2><p><img src="/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/Hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E8%A7%A3%E5%86%B3/Snipaste_2023-04-23_21-48-18.jpg"></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo-renderer-marked</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo添加搜索插件-hexo-generator-searchdb</title>
    <url>/2023/04/25/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/Hexo%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E6%8F%92%E4%BB%B6-hexo-generator-searchdb/</url>
    <content><![CDATA[<blockquote>
<p><a href="https://blog.csdn.net/nineya_com/article/details/103338696#2hexogeneratorsearchdb_10">【CSDN】hexo博客添加本地搜索功能</a></p>
</blockquote>
<hr>
<h2 id="到blog目录下"><a href="#到blog目录下" class="headerlink" title="到blog目录下"></a>到<code>blog</code>目录下</h2><p><img src="/2023/04/25/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/Hexo%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E6%8F%92%E4%BB%B6-hexo-generator-searchdb/Snipaste_2023-04-25_11-08-07.jpg"></p>
<h2 id="添加插件-hexo-generator-searchdb"><a href="#添加插件-hexo-generator-searchdb" class="headerlink" title="添加插件 hexo-generator-searchdb"></a>添加插件 hexo-generator-searchdb</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p><img src="/2023/04/25/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/Hexo%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E6%8F%92%E4%BB%B6-hexo-generator-searchdb/Snipaste_2023-04-25_11-09-16.jpg"></p>
<h2 id="修改博客目录下-config-yml配置文件"><a href="#修改博客目录下-config-yml配置文件" class="headerlink" title="修改博客目录下_config.yml配置文件"></a>修改博客目录下_config.yml配置文件</h2><blockquote>
<p>添加以下内容</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  content: true</span><br><span class="line">  format: html</span><br></pre></td></tr></table></figure>

<p><img src="/2023/04/25/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/Hexo%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E6%8F%92%E4%BB%B6-hexo-generator-searchdb/Snipaste_2023-04-25_11-12-40.jpg"></p>
<p><em>补充描述：</em></p>
<blockquote>
<p><code>path：</code>表示搜索后生成的文件路径，可以生成xml和json两种格式</p>
<p><code>field：</code>表示搜索的范围，有“post、page和all”三种值</p>
<blockquote>
<p> post：所有的文章；</p>
<p> page：所有顶部导航选项的页面；</p>
<p> all：所有的文章和顶部导航选项的页面。</p>
</blockquote>
<p><code> content：</code>是否包含搜索到的文章的全部内容。如果false，生成的结果只包括标题和创建时间这些信息，没有文章主体。默认情况下是true.</p>
<p><code>format：</code>搜索到的内容、选项的格式。</p>
<blockquote>
<p>html(默认)：将html原文本缩略。</p>
<p>striptags：将html原文本缩略，并删除所有标记。</p>
<p>raw：记下每一篇文章或每一页的文字。</p>
</blockquote>
</blockquote>
<h2 id="修改主题Theme目录下-config-yml配置文件"><a href="#修改主题Theme目录下-config-yml配置文件" class="headerlink" title="修改主题Theme目录下_config.yml配置文件"></a>修改主题Theme目录下_config.yml配置文件</h2><p><img src="/2023/04/25/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/Hexo%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E6%8F%92%E4%BB%B6-hexo-generator-searchdb/Snipaste_2023-04-25_11-15-46.jpg"></p>
<h2 id="启动Hexo"><a href="#启动Hexo" class="headerlink" title="启动Hexo"></a>启动Hexo</h2><p><img src="/2023/04/25/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/Hexo%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E6%8F%92%E4%BB%B6-hexo-generator-searchdb/Snipaste_2023-04-25_11-19-29.jpg"></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo-generator-searchdb</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo设置文章加密</title>
    <url>/2023/04/26/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/Hexo%E8%AE%BE%E7%BD%AE%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/</url>
    <content><![CDATA[<blockquote>
<p><a href="https://blog.csdn.net/WwLK123/article/details/124436871">Hexo博客设置文章加密</a></p>
</blockquote>
<h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-blog-encrypt</span><br></pre></td></tr></table></figure>
<p><img src="/2023/04/26/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/Hexo%E8%AE%BE%E7%BD%AE%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/Snipaste_2023-04-26_11-01-29.jpg"></p>
<h2 id="增加-config-yml配置项"><a href="#增加-config-yml配置项" class="headerlink" title="增加_config.yml配置项"></a>增加<code>_config.yml</code>配置项</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">encrypt:</span><br><span class="line">  enable: true  </span><br></pre></td></tr></table></figure>

<h2 id="页面模板添加加密字段"><a href="#页面模板添加加密字段" class="headerlink" title="页面模板添加加密字段"></a>页面模板添加加密字段</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">password: </span><br><span class="line">message: </span><br></pre></td></tr></table></figure>
<p><img src="/2023/04/26/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/Hexo%E8%AE%BE%E7%BD%AE%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/Snipaste_2023-04-26_11-17-21.jpg"></p>
<h2 id="启动运行"><a href="#启动运行" class="headerlink" title="启动运行"></a>启动运行</h2><p><strong>文章首页展示-已加密</strong></p>
<p><img src="/2023/04/26/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/Hexo%E8%AE%BE%E7%BD%AE%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/Snipaste_2023-04-26_11-19-08.jpg"></p>
<p><strong>文章预览页-已加密</strong></p>
<p><img src="/2023/04/26/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/Hexo%E8%AE%BE%E7%BD%AE%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/Snipaste_2023-04-26_11-21-03.jpg"></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo-blog-encrypt</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo通过windows的bat脚本联动</title>
    <url>/2023/04/25/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/Hexo%E9%80%9A%E8%BF%87windows%E7%9A%84bat%E8%84%9A%E6%9C%AC%E8%81%94%E5%8A%A8/</url>
    <content><![CDATA[<h2 id="想法初衷"><a href="#想法初衷" class="headerlink" title="想法初衷"></a>想法初衷</h2><blockquote>
<p>通过Windows的bat脚本一键化对hexo执行部署打包等相关命令</p>
</blockquote>
<hr>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/u012815136/article/details/101549751">bat批处理脚本中文乱码问题解决</a></p>
<p><a href="https://blog.csdn.net/laozhuxinlu/article/details/52853787">.Bat之批处理实现手动输入变量参数</a></p>
<p><a href="https://blog.csdn.net/s_y_w123/article/details/111353912">使用bat脚本自动打开cmd并执行命令</a></p>
<p><a href="https://blog.csdn.net/weixin_46909756/article/details/108726489">写一个打开cmd窗口并执行cmd命令的Windows脚本（.bat文件）</a></p>
<p><a href="https://blog.csdn.net/sinat_16741503/article/details/72869123">bat文件命令行去除变量的空格</a></p>
<p><a href="https://blog.csdn.net/l_o_s/article/details/103417243">Bat 等待一段指定的时间</a></p>
<p><a href="https://blog.csdn.net/JintGuo/article/details/77542490">Windows copy命令</a></p>
<p><a href="https://blog.csdn.net/weixin_40277264/article/details/121531320">bat 复制文件和文件夹（目录</a></p>
<hr>
<blockquote>
<p>未使用，但是觉得以后会涉及，于是记录下来</p>
</blockquote>
<p><a href="https://blog.csdn.net/Lvbey/article/details/118611287">在批处理(cmd，bat)下传递参数和获取参数</a></p>
<hr>
<h2 id="代码命令"><a href="#代码命令" class="headerlink" title="代码命令"></a>代码命令</h2><h3 id="一键运行hexo-s"><a href="#一键运行hexo-s" class="headerlink" title="一键运行hexo s"></a>一键运行<code>hexo s</code></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">:: 防止中文乱码</span><br><span class="line">chcp 65001</span><br><span class="line"></span><br><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">:: 获取最新代码</span><br><span class="line">start cmd /c &quot;cd/d D:\workSpace\Blog\blog\themes\butterfly &amp;&amp; git pull &quot;</span><br><span class="line">:: 清空public打包目录/打包资源/本地部署</span><br><span class="line">start cmd /k &quot;cd/d D:\workSpace\Blog\blog &amp;&amp; hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="通过bat脚本替代hexo-n命令创建新页面"><a href="#通过bat脚本替代hexo-n命令创建新页面" class="headerlink" title="通过bat脚本替代hexo n命令创建新页面"></a>通过bat脚本替代<code>hexo n</code>命令创建新页面</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">:: 防止中文乱码</span><br><span class="line">chcp 65001</span><br><span class="line"></span><br><span class="line">:: 不打印其他命令的回显(放在&#x27;@echo off&#x27;上此注释会被输出到控制台)</span><br><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">:: 配合&#x27;goto begin&#x27;回到此处重复执行操作</span><br><span class="line">:: :begin</span><br><span class="line"></span><br><span class="line">:: 获取输入</span><br><span class="line">set input=</span><br><span class="line">set /p input=请输入新增页面名称:</span><br><span class="line"></span><br><span class="line">:: 去除输入的所有空格（因为空格会导致hexo n创建新页面失败）</span><br><span class="line">set &quot;input=%input: =%&quot;</span><br><span class="line"></span><br><span class="line">:: 打印用户输入参数</span><br><span class="line">echo %input%</span><br><span class="line"></span><br><span class="line">:: 执行cmd命令(cmd /c 表示执行完毕后关闭窗口)</span><br><span class="line">start cmd /c &quot;cd/d D:\workSpace\Blog\blog &amp;&amp; hexo n &#x27;%input%&#x27; &quot;</span><br><span class="line"></span><br><span class="line">:: 可配合&#x27;:begin&#x27;进行重复执行操作</span><br><span class="line">:: goto begin</span><br><span class="line"></span><br><span class="line">:: 暂停</span><br><span class="line">:: pause</span><br><span class="line"></span><br><span class="line">:: 退出关闭窗口</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>

<h3 id="通过bat脚本替代hexo-n命令创建新页面-2-0"><a href="#通过bat脚本替代hexo-n命令创建新页面-2-0" class="headerlink" title="通过bat脚本替代hexo n命令创建新页面 2.0"></a>通过bat脚本替代<code>hexo n</code>命令创建新页面 2.0</h3><blockquote>
<p>对创建完成的文件及文件夹复制到指定目录下(vscode工作目录)</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">:: 防止中文乱码</span><br><span class="line">chcp 65001</span><br><span class="line"></span><br><span class="line">:: 不打印其他命令的回显(放在&#x27;@echo off&#x27;上此注释会被输出到控制台)</span><br><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">:: 初始化参数配置</span><br><span class="line">set BlogPath=D:\workSpace\Blog\blog</span><br><span class="line">echo 博客目录：%BlogPath%</span><br><span class="line">set CopyFrom=D:\workSpace\Blog\blog\source\_posts\</span><br><span class="line">echo 复制目录：%CopyFrom%</span><br><span class="line">set ParseTo=D:\</span><br><span class="line">echo 粘贴目录：%ParseTo%</span><br><span class="line"></span><br><span class="line">:: 配合&#x27;goto begin&#x27;回到此处重复执行操作</span><br><span class="line">:: :begin</span><br><span class="line"></span><br><span class="line">:: 获取输入</span><br><span class="line">set input=</span><br><span class="line">set /p input=请输入新增页面名称:</span><br><span class="line"></span><br><span class="line">:: 去除输入的所有空格（因为空格会导致hexo n创建新页面失败）</span><br><span class="line">set &quot;input=%input: =%&quot;</span><br><span class="line"></span><br><span class="line">:: 打印用户输入参数</span><br><span class="line">echo %input%</span><br><span class="line"></span><br><span class="line">:: 执行cmd命令(cmd /c 表示执行完毕后关闭窗口)</span><br><span class="line">start cmd /c &quot;cd/d %BlogPath% &amp;&amp; hexo n &#x27;%input%&#x27; &quot;</span><br><span class="line"></span><br><span class="line">:: 等待最长5s继续往下执行操作（原因：需要等待 hexo n 的文件创建好，然后执行复制操作!）</span><br><span class="line">timeout /t 5 /nobreak &gt; NUL</span><br><span class="line"></span><br><span class="line">:: 复制创建文件到vscode工作目录下</span><br><span class="line">copy  %CopyFrom%%input%.md  %ParseTo%</span><br><span class="line">:: 创建空文件夹</span><br><span class="line">md %ParseTo%%input%</span><br><span class="line"></span><br><span class="line">:: 可配合&#x27;:begin&#x27;进行重复执行操作</span><br><span class="line">:: goto begin</span><br><span class="line"></span><br><span class="line">:: 暂停</span><br><span class="line">:: pause</span><br><span class="line"></span><br><span class="line">:: 退出关闭窗口</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>

<h3 id="通过bat脚本替代hexo-n命令创建新页面-3-0"><a href="#通过bat脚本替代hexo-n命令创建新页面-3-0" class="headerlink" title="通过bat脚本替代hexo n命令创建新页面 3.0"></a>通过bat脚本替代<code>hexo n</code>命令创建新页面 3.0</h3><blockquote>
<p>选择一个目录下，创建新页面（便于管理文件）</p>
</blockquote>
<pre><code>暂时搁置，待后续更新~
</code></pre>
<h2 id="一键推送提交代码"><a href="#一键推送提交代码" class="headerlink" title="一键推送提交代码"></a>一键推送提交代码</h2><blockquote>
<p>vscode里面的文件写好了需要提交仓库（备份用途）<br>hexo下的文件（处理图片问题）打包之后也需要提交推送到仓库</p>
</blockquote>
<h3 id="vscode下文件提交git"><a href="#vscode下文件提交git" class="headerlink" title="vscode下文件提交git"></a>vscode下文件提交git</h3><blockquote>
<p>todo</p>
</blockquote>
<h3 id="hexo下部署文件提交git"><a href="#hexo下部署文件提交git" class="headerlink" title="hexo下部署文件提交git"></a>hexo下部署文件提交git</h3><blockquote>
<p>todo</p>
</blockquote>
<h2 id="bat命令行去除空格命令"><a href="#bat命令行去除空格命令" class="headerlink" title="bat命令行去除空格命令"></a>bat命令行去除空格命令</h2><blockquote>
<p>存在空格的情况影响执行命令<code>hexo n</code>的结果-&gt;失败!</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chcp 65001</span><br><span class="line">@echo off</span><br><span class="line">SETLOCAL ENABLEDELAYEDEXPANSION</span><br><span class="line">set abc=                          uvwxyz</span><br><span class="line"></span><br><span class="line">:delleft</span><br><span class="line">if &quot;%abc:~0,1%&quot;==&quot; &quot; set abc=%abc:~1%&amp;&amp;goto delleft</span><br><span class="line">echo 去除左边空格后结果为:%abc%</span><br><span class="line"></span><br><span class="line">set abc=uvwxyz                                                   </span><br><span class="line">:delright</span><br><span class="line">if &quot;%abc:~-1%&quot;==&quot; &quot; set abc=%abc:~0,-1%&amp;&amp;goto delright</span><br><span class="line">echo 去掉右边空格后结果为:%abc%</span><br><span class="line"></span><br><span class="line">set abc=  u  v  w  x  y  z   </span><br><span class="line">set &quot;abc=%abc: =%&quot;</span><br><span class="line">echo 去除所有空格后结果为:%abc%</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Windowsin系统bat脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Hexo+GitHub Page搭建个人博客</title>
    <url>/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/%E5%9F%BA%E4%BA%8EHexo-GitHub-Page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<br/>

<p>本次教程参考资料：</p>
<blockquote>
<p><a href="https://segmentfault.com/a/1190000004947261" title="来源:segmentfault">手把手教你使用Hexo + Github Pages搭建个人独立博客</a><br><a href="https://zhuanlan.zhihu.com/p/334815426" title="来源：知乎">我是如何利用Github Pages搭建起我的博客，细数一路的坑</a></p>
</blockquote>
<h1 id="搭建Hexo博客"><a href="#搭建Hexo博客" class="headerlink" title="搭建Hexo博客"></a>搭建Hexo博客</h1><hr>
<br/>

<ol>
<li><a href="https://nodejs.org/en">Node.js下载安装</a><br><img src="/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/%E5%9F%BA%E4%BA%8EHexo-GitHub-Page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/nodejs.jpg"></li>
</ol>
<br/>

<ol start="2">
<li><a href="https://git-scm.com/">Git下载安装</a><br><img src="/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/%E5%9F%BA%E4%BA%8EHexo-GitHub-Page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/git.jpg"></li>
</ol>
<br/>

<ol start="3">
<li><p>安装Hexo</p>
 <br/>

<p>3.1 Windows下用CMD命令窗口打开<br><img src="/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/%E5%9F%BA%E4%BA%8EHexo-GitHub-Page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Snipaste_2023-04-23_09-35-00.jpg"> </p>
<p>3.2 安装Hexo模块</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g #将模块全局安装</span><br><span class="line">npm install hexo-cli --save #将模块安装到项目目录下</span><br></pre></td></tr></table></figure>
<p>3.3 初始化Hexo</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">hexo init blog #初始化博客目录（&#x27;blog&#x27;可修改其他名称）</span><br><span class="line">cd blog</span><br><span class="line">npm install #安装依赖配置</span><br></pre></td></tr></table></figure>
<p><img src="/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/%E5%9F%BA%E4%BA%8EHexo-GitHub-Page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Snipaste_2023-04-23_09-38-35.jpg"></p>
<p>3.4 启动Hexo</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g # 或者hexo generate</span><br><span class="line">hexo s # 或者hexo server</span><br></pre></td></tr></table></figure>
<pre><code> 启动完成后，可以在[http://localhost:4000/](http://localhost:4000/) 进行查看
</code></pre>
 <br/>

<p><img src="/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/%E5%9F%BA%E4%BA%8EHexo-GitHub-Page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Snipaste_2023-04-23_09-40-24.jpg"></p>
 <br/>

<p>命令解释：</p>
<ul>
<li>hexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹</li>
<li>hexo server (hexo s) 启动本地web服务，用于博客的预览</li>
<li>hexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台）</li>
<li>hexo new “postName” (hexo n) #新建文章  </li>
<li>hexo new page “pageName” #新建页面</li>
</ul>
 <br/>

<p> 3.5 常用组合命令<br> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s -g #生成预览</span><br><span class="line">hexo d -g #生成部署</span><br></pre></td></tr></table></figure></p>
</li>
</ol>
<hr>
<h1 id="Hexo主题设置"><a href="#Hexo主题设置" class="headerlink" title="Hexo主题设置"></a>Hexo主题设置</h1><ol>
<li>安装主题<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure>
<img src="/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/%E5%9F%BA%E4%BA%8EHexo-GitHub-Page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/init_hexo_theme.jpg"></li>
</ol>
<br/>

<ol start="2">
<li>启用主题<blockquote>
<p>修改Hexo目录下的_config.yml配置文件中的theme属性，将其设置为yilia</p>
</blockquote>
</li>
</ol>
<p><img src="/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/%E5%9F%BA%E4%BA%8EHexo-GitHub-Page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/update_hexo_theme.jpg"></p>
<br/>

<ol start="3">
<li>更新主题并启动Hexo<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd themes/yilia</span><br><span class="line">git pull</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<img src="/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/%E5%9F%BA%E4%BA%8EHexo-GitHub-Page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/new_theme_yilia.jpg"></li>
</ol>
<hr>
<h1 id="Github-Pages"><a href="#Github-Pages" class="headerlink" title="Github Pages"></a>Github Pages</h1><br/>

<ol>
<li>创建GitHub Page仓库</li>
</ol>
   <br/>

<p>   <img src="/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/%E5%9F%BA%E4%BA%8EHexo-GitHub-Page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Snipaste_2023-04-23_10-21-35.jpg" title="图片来源：上述知乎博客"></p>
   <br/>

<ol start="2">
<li><p>开启GitHub Page仓库</p>
 <br/>

<pre><code> 进入设置
</code></pre>
<p><img src="/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/%E5%9F%BA%E4%BA%8EHexo-GitHub-Page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Snipaste_2023-04-23_10-22-02.jpg" title="图片来源：上述知乎博客"></p>
 <br/>

<pre><code>  确认仓库站点是否开通（一般是默认开通的）
</code></pre>
<p><img src="/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/%E5%9F%BA%E4%BA%8EHexo-GitHub-Page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Snipaste_2023-04-23_10-22-13.jpg" title="图片来源：上述知乎博客"></p>
</li>
</ol>
  <br/>

<hr>
<h1 id="部署Hexo到GitHub-Page仓库"><a href="#部署Hexo到GitHub-Page仓库" class="headerlink" title="部署Hexo到GitHub Page仓库"></a>部署Hexo到GitHub Page仓库</h1><ol>
<li>使用Hexo deploy部署</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#需要安装扩展</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<br/>

    
<p>修改_config.xml配置文件</p>
<pre><code>对应blog根目录：D:\workSpace\Test\TestHexo\blog\_config.xml
</code></pre>
<br>

<pre><code>原配置文件截图:
</code></pre>
<p><img src="/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/%E5%9F%BA%E4%BA%8EHexo-GitHub-Page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Snipaste_2023-04-23_10-33-56.jpg"></p>
<pre><code>修改后配置文件截图：
</code></pre>
<p><img src="/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/%E5%9F%BA%E4%BA%8EHexo-GitHub-Page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Snipaste_2023-04-23_10-35-37.jpg"></p>
<p>执行部署命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<br/>

<ol start="2">
<li>使用Git 命令部署</li>
</ol>
<br/>
   
<p>克隆当前仓库到目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone  xxxabc.git .deploy/xxxabc</span><br></pre></td></tr></table></figure>

<p>deply脚本</p>
<blockquote>
<p>用于Linux环境下一键部署发布Hexo到GitHub Page仓库</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">cp -R public/* .deploy/xxxabc</span><br><span class="line">cd .deploy/xxxabc</span><br><span class="line">git add .</span><br><span class="line">git commit -m “update”</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>

<p>通过<code>hexo g</code>在public下生成新的待发布页面，通过命令<code>copy</code>到克隆下的仓库中，在通过<code>git</code>命令进行<code>push</code>到远端仓库进行发布</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
  <entry>
    <title>百词斩-记单词 04.25</title>
    <url>/2023/04/25/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E7%99%BE%E8%AF%8D%E6%96%A9-%E8%AE%B0%E5%8D%95%E8%AF%8D-04-25/</url>
    <content><![CDATA[<blockquote>
<p>数据来源：百词斩APP</p>
</blockquote>
<h2 id="faulty"><a href="#faulty" class="headerlink" title="faulty"></a><a href="https://oduoduoke.github.io/2023/04/24/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E7%99%BE%E8%AF%8D%E6%96%A9-%E8%AE%B0%E5%8D%95%E8%AF%8D0424/#faulty">faulty</a></h2>]]></content>
      <categories>
        <category>English</category>
      </categories>
      <tags>
        <tag>百词斩</tag>
      </tags>
  </entry>
  <entry>
    <title>百词斩-记单词0424</title>
    <url>/2023/04/24/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E7%99%BE%E8%AF%8D%E6%96%A9-%E8%AE%B0%E5%8D%95%E8%AF%8D0424/</url>
    <content><![CDATA[<p><img src="/2023/04/24/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E7%99%BE%E8%AF%8D%E6%96%A9-%E8%AE%B0%E5%8D%95%E8%AF%8D0424/Snipaste_2023-04-24_10-33-39.jpg"></p>
<hr>
<blockquote>
<p>数据来源：百词斩APP</p>
</blockquote>
<h2 id="steak"><a href="#steak" class="headerlink" title="steak"></a>steak</h2><p>音标：&#x2F;steik&#x2F;</p>
<p>助记词：<em>斯特课</em></p>
<p>复数形式：<strong>steaks</strong></p>
<p>名词（n）： 牛排；鱼块；</p>
<p>图文</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#叉子上叉了两块美味的牛排。</span><br><span class="line">There are tow pieces of delicious `steak` on the fork. </span><br></pre></td></tr></table></figure>


<hr>
<h2 id="cough"><a href="#cough" class="headerlink" title="cough"></a>cough</h2><p>音标：&#x2F;kɔːf&#x2F;</p>
<p>助记词：<em>卡夫</em></p>
<p>动词（v）：咳嗽</p>
<p>名词（n）：咳嗽</p>
<p>复数：coughs</p>
<p>第三人称单数：coughs</p>
<p>现在分词：coughing</p>
<p>过去式：coughed</p>
<p>过去分词：coughed</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#他生病时咳嗽的厉害</span><br><span class="line">He coughed badly when he was ill .</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="pressure"><a href="#pressure" class="headerlink" title="pressure"></a>pressure</h2><p>音标：&#x2F;ˈpreʃər&#x2F;</p>
<p>助记词：<em>普睿西儿</em></p>
<p>名词（n）：压力</p>
<p>及物动词（vt）：对…施加压力</p>
<p>复数：pressures</p>
<p>第三人称单数： pressures</p>
<p>现在分词：pressuring</p>
<p>过去式：pressured</p>
<p>过去分词： pressured</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#这个大梨的压力实在是难以承受。</span><br><span class="line">The pressure of ths giant pear is unbearable.</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="hinder"><a href="#hinder" class="headerlink" title="hinder"></a>hinder</h2><p>音标：&#x2F;ˈhɪndər&#x2F;</p>
<p>助记词：<em>哼der</em></p>
<p>动词（v）：阻碍、妨碍</p>
<p>第三人称单数：hinders</p>
<p>现在分词： hindering</p>
<p>过去式：hindered</p>
<p>过去分词：hindered</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#这个障碍物实在是阻碍我前进</span><br><span class="line">The obstacle really `hinders` my forward progress.</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="raw"><a href="#raw" class="headerlink" title="raw"></a>raw</h2><p>音标：&#x2F;rɔː&#x2F;</p>
<p>助记词：<em>若</em></p>
<p>形容词（adj）：生的、为煮过的；（因皮肤开裂）疼痛的</p>
<p>比较级：rawer</p>
<p>最高级：rawest</p>
<p>名词：rawness</p>
<p>副词：rawly</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#木板上的牛肉是生的。</span><br><span class="line">The beef on the wooden board is `raw`.</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="luggage"><a href="#luggage" class="headerlink" title="luggage"></a>luggage</h2><p>音标：&#x2F;ˈlʌɡɪdʒ&#x2F;</p>
<p>助记词：<em>拉给及</em></p>
<p>名词（n）：行李</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#你可以从这些行李箱中选择任意的尺寸和颜色的一个作为你的行李箱。</span><br><span class="line">You can choose your `luggage` of any size and color from these ones.</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="extent"><a href="#extent" class="headerlink" title="extent"></a>extent</h2><p>音标：&#x2F;ɪkˈstent&#x2F;</p>
<p>助记词：<em>一可斯坦特</em></p>
<p>名词（n）：范围；长度；程度；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#围栏以内都是我的财产范围。</span><br><span class="line">The `extent` of my property is marked by a fence.</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="faulty"><a href="#faulty" class="headerlink" title="faulty"></a>faulty</h2><p>音标：&#x2F;ˈfɔːlti&#x2F;</p>
<p>助记词：<em>佛提</em></p>
<p>比较级：faultier</p>
<p>最高级：faultiest</p>
<p>名词：faultiness</p>
<p>副词：faultily</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#快跑！这个烤面包机出故障了，它随时都可能毁了你的面包！</span><br><span class="line">Run! This toaster is `faulty` and might kill your toast at </span><br><span class="line">any time !</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="ground"><a href="#ground" class="headerlink" title="ground"></a>ground</h2><p>音标：&#x2F;ɡraʊnd&#x2F;</p>
<p>助记词：<em>过让得</em></p>
<p>名词（n）：地面</p>
<p>复数：grounds</p>
<p>第三人称单数：grounds</p>
<p>现在分词：grounding</p>
<p>过去式：grounded</p>
<p>过去分词：grounded</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">The man is lying on the `ground`.</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="encounter"><a href="#encounter" class="headerlink" title="encounter"></a>encounter</h2><p>音标：&#x2F;ɪnˈkaʊntər&#x2F;</p>
<p>助记词：<em>因康特儿</em></p>
<p>及物动词（vt）：邂逅，偶遇</p>
<p>名词（n）：偶然碰见，遭遇</p>
<p>复数：encounters</p>
<p>第三人称单数：encounters</p>
<p>现在分词：encountering</p>
<p>过去式：encountered</p>
<p>过去分词:encountered</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#他在街上遇到了老朋友。</span><br><span class="line">He `encountered` his old friend on the street.</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="reap"><a href="#reap" class="headerlink" title="reap"></a>reap</h2><p>音标：&#x2F;riːp&#x2F;</p>
<p>助记词：<em>瑞普</em></p>
<p>动词（v）：收割；获得；收获；</p>
<p>第三人称单数：reaps</p>
<p>现在分词：reaping </p>
<p>过去式：reaped</p>
<p>过去分词：reaped</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#庄稼已经完全成熟，是时候收割了。</span><br><span class="line">The crops are fully grown,and it`s time to `reap` them.</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="nutrient"><a href="#nutrient" class="headerlink" title="nutrient"></a>nutrient</h2><p>音标：&#x2F;ˈnuːtriənt&#x2F;</p>
<p>助记词：<em>牛醉ing嗯特</em></p>
<p>名词（n）：营养物</p>
<p>形容词（adj）：营养的</p>
<p>复数：nutrients</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#苹果含有许多有益身体健康的营养成分。</span><br><span class="line">Apples contain many healthy `nutrients` for the body.</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="fair"><a href="#fair" class="headerlink" title="fair"></a>fair</h2><p> 音标：&#x2F;fer&#x2F;</p>
<p> 助记词：<em>菲尔</em></p>
<p> 形容词（adj）：合理的，公平的；相当的，尚好的</p>
<p> 名词（n）：集市，交易会</p>
<p> 复数： fairs</p>
<p> 第三人称单数：fairs</p>
<p> 现在分词：fairing</p>
<p> 过去式：faired</p>
<p> 过去分词：faired</p>
<p> 比较级：fairer</p>
<p> 最高级：fairest</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#相比较左边的饮料，右边的饮料售价更合理。</span><br><span class="line">Compared to that on the left,the drink on the right is being sold at a `fair` price.</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="bore"><a href="#bore" class="headerlink" title="bore"></a>bore</h2><p> 音标：&#x2F;bɔːr&#x2F;</p>
<p> 助记词：<em>波儿</em></p>
<p> 动词（v）：使厌烦</p>
<p> 复数：bores</p>
<p> 第三人称单数：bores</p>
<p> 现在分词：boring</p>
<p> 过去式：bored</p>
<p> 过去分词：bored</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#这个男人冗长的讲话让同事们都厌烦的想睡觉了。</span><br><span class="line">The man`s endless talking has `bored` his colleagues to sleep.</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="tragedy"><a href="#tragedy" class="headerlink" title="tragedy"></a>tragedy</h2><p> 音标：&#x2F;ˈtrædʒədi&#x2F;</p>
<p> 助记词：<em>tra极地</em></p>
<p> 名词（n）：悲剧</p>
<p> 复数：targedies</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#这场车祸对于这个男人来说是场灾难。</span><br><span class="line">The car accident was `tragedy` for the man.</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="abundance"><a href="#abundance" class="headerlink" title="abundance"></a>abundance</h2><p> 音标：&#x2F;əˈbʌndəns&#x2F;</p>
<p> 助记词：<em>额班等斯</em> （a+bun+dan+ce）</p>
<p> 名词（n）：大量；丰富</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#这只可爱的小动物有满满一堆的食物。</span><br><span class="line">This cute animal has an `abundance` of foood.</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="emphasis"><a href="#emphasis" class="headerlink" title="emphasis"></a>emphasis</h2><p>音标：&#x2F;ˈemfəsɪs&#x2F;</p>
<p>助记词：<em>嗯fo塞斯</em>（em+pha+sis）</p>
<p>名词（n）：重点；强调；重要性；</p>
<p>复数：emphases</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#标亮单词，以示重点。</span><br><span class="line">The word has been highlighted to provide `emphasis`.</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="wage"><a href="#wage" class="headerlink" title="wage"></a>wage</h2><p>音标：&#x2F;weɪdʒ&#x2F;</p>
<p>助记词：<em>为己</em>  （wa+ge）</p>
<p>名词（n）：工资，薪水</p>
<p>及物动词（vt）：开展，进行（战争、运动）</p>
<p>复数：wages</p>
<p>第三人称单数：wages</p>
<p>现在分词：waging</p>
<p>过去式：waged</p>
<p>过去分词：waged</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#这个工人拿到工资的时候很开心。</span><br><span class="line">The worker was so happy when she got her `wages`.</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="conservative"><a href="#conservative" class="headerlink" title="conservative"></a>conservative</h2><p>音标：&#x2F;kənˈsɜːrvətɪv&#x2F;</p>
<p>助记词：<em>康色五提悟</em> （con+ser+va+tive）</p>
<p>形容词（adj）：保守的；保守估计的；保守党的</p>
<p>名词（n）：保守者；保守党党员</p>
<p>复数：conservatives</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#这个人的态度如此保守，就连情侣牵手他都看不惯。</span><br><span class="line">The man has such a `conservative` attitude; he even despiese the couple holding hands.</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="intermediate"><a href="#intermediate" class="headerlink" title="intermediate"></a>intermediate</h2><p>音标：&#x2F;ˌɪntərˈmiːdiət&#x2F;</p>
<p>助记词：<em>因特儿米地儿特</em> （inter+me+di+ate）</p>
<p>形容词（adj）：中间的</p>
<p>名词（n）；媒介</p>
<p>动词（v）：调节，干涉</p>
<p>复数：intermediates</p>
<p>第三人称单数：intermediates</p>
<p>现在分词：intermediating</p>
<p>过去式：intermediated</p>
<p>过去分词：intermediated</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#中间物品的尺寸适中。</span><br><span class="line">The toy in the middle is of `intermediate` size.</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="pursue"><a href="#pursue" class="headerlink" title="pursue"></a>pursue</h2><p>音标：&#x2F;pərˈsuː&#x2F;</p>
<p>助记词：<em>per树</em> （pur+sue）</p>
<p>动词（v）：追赶；进行，从事</p>
<p>第三人称单数：pursues</p>
<p>现在分词：pursuing</p>
<p>过去式：pursued</p>
<p>过去分词：pursued</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#警察正在追赶那两个小偷，他们偷了一个女人的钱包。</span><br><span class="line">The police were `pursuing` the two thieves who had stolen a woman`s purse.</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="urgency"><a href="#urgency" class="headerlink" title="urgency"></a>urgency</h2><p>音标：&#x2F;ˈɜːrdʒənsi&#x2F;</p>
<p>助记词：<em>儿金塞</em> （ur+gen+cy）</p>
<p>名词（n）：紧急；紧急的事</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#她急匆匆的跑着，生怕开会迟到。</span><br><span class="line">She ran with a sence of `urgency`,afraid of being late for the meeting .</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="extinction"><a href="#extinction" class="headerlink" title="extinction"></a>extinction</h2><p>音标：&#x2F;ɪkˈstɪŋkʃn&#x2F;</p>
<p>助记词：<em>一可斯滕行</em> （ex+tin+ction）</p>
<p>名词（n）：灭绝</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#这类动物的灭绝发生在大约6600万年前。</span><br><span class="line">The `extinction` of this animal occourred around 66 million years ago.</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="furniture"><a href="#furniture" class="headerlink" title="furniture"></a>furniture</h2><p>音标：&#x2F;ˈfɜːrnɪtʃər&#x2F;</p>
<p>助记词：<em>fer尼切儿</em> （fur+ni+ture）</p>
<p>名词（n）：家具；装置；设备</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#他的所有的家具都是成套的。</span><br><span class="line">All of his `furniture` came as a set.</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="curb"><a href="#curb" class="headerlink" title="curb"></a>curb</h2><p>音标：&#x2F;kɜːrb&#x2F;</p>
<p>助记词：<em>可布</em> （cur+b）</p>
<p>动词（v）：勒住；印制；控制；约束<br>名词（n）：路缘；控制；约束</p>
<p>复数：curbs</p>
<p>第三人称单数：curbs</p>
<p>现在分词：curbing</p>
<p>过去式：curbed</p>
<p>过去分词：curbed</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#在你的马掉下悬崖前，快勒住它！</span><br><span class="line">`Curb` your horse now before it runs off ths cliff!</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="analyst"><a href="#analyst" class="headerlink" title="analyst"></a>analyst</h2><p>音标：&#x2F;ˈænəlɪst&#x2F;</p>
<p>助记词：<em>安no来斯特</em> （an+a+lyst）</p>
<p>名词（n）：分析员</p>
<p>复数：analysts</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#分析员正在解说股市走向。</span><br><span class="line">Ths `analyst` is explaining the trend of ths stock market.</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="loosen"><a href="#loosen" class="headerlink" title="loosen"></a>loosen</h2><p>音标：&#x2F;ˈluːsn&#x2F;</p>
<p>助记词：<em>路森</em>（loo+sen）</p>
<p>动词（v）：松开；松弛</p>
<p>第三人称单数：loosens</p>
<p>现在分词：loosening</p>
<p>过去式：loosened</p>
<p>过去分词：loosened</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#在办公室工作一天后，我松了松领带。</span><br><span class="line">I `loosen` my tie after a long day in the office.</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="appear"><a href="#appear" class="headerlink" title="appear"></a>appear</h2><p>音标：&#x2F;əˈpɪr&#x2F;</p>
<p>助记词：<em>额皮儿</em> （app+ear）</p>
<p>不及物动词（vi）：出现，露面</p>
<p>第三人称单数：appears</p>
<p>现在分词：appearing</p>
<p>过去式：appeared</p>
<p>过去分词：appeared</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#我实在太激动了！我的偶像马上就要出现在舞台上了。</span><br><span class="line">I`m so excited! My idol is about to `appear` on stage.</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="mortgage"><a href="#mortgage" class="headerlink" title="mortgage"></a>mortgage</h2><p>音标：&#x2F;ˈmɔːrɡɪdʒ&#x2F;</p>
<p>助记词：<em>莫儿给及</em> （mort+gage）</p>
<p>名词（n）：抵押贷款</p>
<p>动词（v）：抵押</p>
<p>复数：mortgages</p>
<p>第三人称单数：mortgages</p>
<p>现在分词：mortgaging</p>
<p>过去式：mortgaged</p>
<p>过去分词：mortgaged</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#他办理过抵押贷款，这意味着他是借钱买的房子。</span><br><span class="line">He took out a `mortgage`,meaning he borrowed money to buy his home.</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="reply"><a href="#reply" class="headerlink" title="reply"></a>reply</h2><p>音标：&#x2F;rɪˈplaɪ&#x2F;</p>
<p>助记词：<em>瑞普来</em> （re+ply）</p>
<p>动词（v）：答复</p>
<p>名词（n）：答复</p>
<p>复数：replies</p>
<p>第三人称单数：replies</p>
<p>现在分词：replying</p>
<p>过去式：replied</p>
<p>过去分词：replied</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#我给她发了好多条消息，她却只回复了一个字。</span><br><span class="line">I sent her many messages,but she `replied` with only one word.</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="forgetful"><a href="#forgetful" class="headerlink" title="forgetful"></a>forgetful</h2><p>音标：&#x2F;fərˈɡetfl&#x2F;</p>
<p>助记词：<em>非儿给特佛</em> （for+get+ful）</p>
<p>形容词（adj）：健忘的；使遗忘…的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#这位老人很健忘，他不记得自己在干什么。</span><br><span class="line">The old man is so `forgetful` that he can`t remember what he`s doing.</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="theater"><a href="#theater" class="headerlink" title="theater"></a>theater</h2><p>音标：&#x2F;ˈθiːətər&#x2F;</p>
<p>助记词：<em>非额切儿</em> （the+a+ter）</p>
<p>复数：theaters</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#表演结束之后，戏院很快就空了。</span><br><span class="line">The `theater` quickly emptied when the performance ended.</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="foremost"><a href="#foremost" class="headerlink" title="foremost"></a>foremost</h2><p>音标：&#x2F;ˈfɔːrmoʊst&#x2F;</p>
<p>助记词：<em>佛儿眸斯特</em> （for+e+most）</p>
<p>形容词（adj）：首要的</p>
<p>副词（adv）：首先</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#特斯拉被视为他那一代人里最棒的发明家之一。</span><br><span class="line">Tesla is regarded as one of the `foremost` inventors of his generation.</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="correspond"><a href="#correspond" class="headerlink" title="correspond"></a>correspond</h2><p>音标：&#x2F;ˌkɔːrəˈspɑːnd&#x2F;</p>
<p>助记词：<em>扩儿斯棒的</em> （corr+es+pond）</p>
<p>不及物动词（vi）：通信；相似</p>
<p>第三人称单数：corresponds</p>
<p>现在分词：corresponding</p>
<p>过去式：corresponded</p>
<p>过去分词：corresponded</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#现如今，人们有许多不同的方式进行通信。</span><br><span class="line">Nowadays, People `correspond` with each other in many different ways.</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="severe"><a href="#severe" class="headerlink" title="severe"></a>severe</h2><p>音标：&#x2F;sɪˈvɪr&#x2F;</p>
<p>助记词：<em>赛V儿</em> （se+ve+re）</p>
<p>形容词（adj）：极为恶劣的；严重的；严厉的；剧烈的</p>
<p>比较级：severer</p>
<p>最高级：severest</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#在如此恶劣的天气条件下，人们走的很艰难。</span><br><span class="line">It`s hard for people to wald in such `severe` weather conditions.</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="bug"><a href="#bug" class="headerlink" title="bug"></a>bug</h2><p>音标：&#x2F;bʌɡ&#x2F;</p>
<p>助记词：<em>巴格</em></p>
<p>名词（n）：错入，故障</p>
<p>及物动词（vt）：使厌烦</p>
<p>复数：bugs</p>
<p>第三人称单数：bugs</p>
<p>现在分词：bugging</p>
<p>过去式：bugged</p>
<p>过去分词：bugged</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#程序员正在努力修复软件中的故障。</span><br><span class="line">The programmer is trying to fix the `bug` in the software.</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="consensus"><a href="#consensus" class="headerlink" title="consensus"></a>consensus</h2><p>音标：&#x2F;kənˈsensəs&#x2F;</p>
<p>助记词：<em>康森色斯</em> （con+sen+sus）</p>
<p>名词（n）：一致同意</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#大家就聚餐吃什么问题达成了一致。</span><br><span class="line">They reached a `consensus` about what to eat for dinner.</span><br></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>English</category>
      </categories>
      <tags>
        <tag>百词斩</tag>
      </tags>
  </entry>
  <entry>
    <title>面试准备|JAVA-基础</title>
    <url>/2023/04/24/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA-%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="Java-中的几种基本数据类型是什么？对应的包装类型是什么？各自占用多少字节呢？"><a href="#Java-中的几种基本数据类型是什么？对应的包装类型是什么？各自占用多少字节呢？" class="headerlink" title="Java 中的几种基本数据类型是什么？对应的包装类型是什么？各自占用多少字节呢？"></a>Java 中的几种基本数据类型是什么？对应的包装类型是什么？各自占用多少字节呢？</h2><blockquote>
<p><a href="https://blog.csdn.net/zhang_java_11/article/details/115171350">【CSDN】Java基本数据类型有哪些？他们分别占几个字节？为什么？</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/49970755">【知乎】Java包装类</a></p>
</blockquote>
<blockquote>
<p>Java中提供了<strong>8</strong>种基本类型。</p>
</blockquote>
<table>
<thead>
<tr>
<th>基本类型</th>
<th>包装类型</th>
<th>区别</th>
<th>占用字节</th>
</tr>
</thead>
<tbody><tr>
<td>byte</td>
<td>Byte</td>
<td>整数类型</td>
<td>1个字节</td>
</tr>
<tr>
<td>short</td>
<td>Short</td>
<td>整数类型</td>
<td>2个字节</td>
</tr>
<tr>
<td>int</td>
<td>Integer</td>
<td>整数类型</td>
<td>4个字节</td>
</tr>
<tr>
<td>long</td>
<td>Long</td>
<td>整数类型</td>
<td>8个字节</td>
</tr>
<tr>
<td>float</td>
<td>Float</td>
<td>浮点类型</td>
<td>4个字节</td>
</tr>
<tr>
<td>double</td>
<td>Double</td>
<td>浮点类型</td>
<td>8个字节</td>
</tr>
<tr>
<td>char</td>
<td>Character</td>
<td>字符类型</td>
<td>2个字节</td>
</tr>
<tr>
<td>boolean</td>
<td>Boolean</td>
<td>布尔类型</td>
<td>boolean单个占4个字节，boolean数组1个字节</td>
</tr>
</tbody></table>
<p>问：一个汉字占用几个字节？</p>
<blockquote>
<p>答：这和编码有关，UTF8一个汉字占3个字节，GBK一个汉字占2个字节。</p>
</blockquote>
<hr>
<h2 id="String-、-StringBuffer-和-StringBuilder-的区别是什么-String-为什么是不可变的"><a href="#String-、-StringBuffer-和-StringBuilder-的区别是什么-String-为什么是不可变的" class="headerlink" title="String 、 StringBuffer 和 StringBuilder 的区别是什么? String 为什么是不可变的?"></a>String 、 StringBuffer 和 StringBuilder 的区别是什么? String 为什么是不可变的?</h2><blockquote>
<p><a href="https://blog.csdn.net/Turniper/article/details/111112824">【CSDN】String、StringBuffer、StringBuilder的区别——（详细叙述）</a></p>
<p><a href="https://www.zhihu.com/question/20618891" title="摘选`JavaGuide`回答">【知乎】如何理解 String 类型值的不可变？</a></p>
</blockquote>
<p><strong>String 、 StringBuffer 和 StringBuilder 的区别</strong></p>
<table>
<thead>
<tr>
<th></th>
<th>String</th>
<th>StringBuffer</th>
<th>StringBuilder</th>
</tr>
</thead>
<tbody><tr>
<td>执行速度</td>
<td>最差</td>
<td>其次</td>
<td>最高</td>
</tr>
<tr>
<td>线程安全</td>
<td>线程安全</td>
<td>线程安全</td>
<td>线程不安全</td>
</tr>
<tr>
<td>使用场景</td>
<td>少量字符串操作</td>
<td>多线程环境下的大量操作</td>
<td>单线程环境下的大量操作</td>
</tr>
</tbody></table>
<p><strong>String 为什么是不可变的?</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">public final class String implements java.io.Serializable, Comparable&lt;String&gt;, CharSequence,Constable, ConstantDesc &#123;</span><br><span class="line">    private final byte[] value;</span><br><span class="line">    //...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>String 类被 final 修饰导致其不能被继承，进而避免了子类破坏 String 不可变</li>
<li>保存字符串的数组被 final 修饰且为私有的，并且String 类没有提供&#x2F;暴露修改这个字符串的方法</li>
</ul>
<hr>
<h2 id="String-s1-x3D-new-String-“abc”-这段代码创建了几个字符串对象？"><a href="#String-s1-x3D-new-String-“abc”-这段代码创建了几个字符串对象？" class="headerlink" title="String s1 &#x3D; new String(“abc”) 这段代码创建了几个字符串对象？"></a>String s1 &#x3D; new String(“abc”) 这段代码创建了几个字符串对象？</h2><blockquote>
<p><a href="https://blog.csdn.net/luzhensmart/article/details/105679905">【CSDN】java中String s &#x3D; new String(“abc”)创建了几个对象</a></p>
<p><a href="https://www.cnblogs.com/ydpvictor/archive/2012/09/09/2677260.html" title="解析讲解的比较好">【博客园】String s&#x3D;new String(“abc”)创建了几个对象?</a></p>
</blockquote>
<blockquote>
<p>答案是<strong>两个</strong></p>
</blockquote>
<br>


<p><em>例题解析：</em></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#创建了一个String对象</span><br><span class="line">String str=&quot;abc&quot;; </span><br><span class="line"></span><br><span class="line">#创建了一个String对象</span><br><span class="line">String a=&quot;abc&quot;;  String b=&quot;abc&quot;;</span><br><span class="line"></span><br><span class="line">#创建了三个String对象</span><br><span class="line">String a=&quot;ab&quot;+&quot;cd&quot;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>在JAVA虚拟机（JVM）中存在着一个<strong>字符串池</strong>，其中保存着很多String对象，并且可以被共享使用，因此它提高了效率。</p>
<p><code>String a=&quot;abc&quot;</code>，这行代码被执行的时候，JAVA虚拟机首先在字符串池中查找是否已经存在了值为”abc”的这么一个对象，它的判断依据是<code>String类equals(Object obj)</code>方法的返回值。<br>如果有，则不再创建新的对象，直接返回已存在对象的引用；<br>如果没有，则先创建这个对象，然后把它加入到字符串池中，再将它的引用返回。</p>
</blockquote>
<p><em>哪些情况下可以加入字符串池？</em></p>
<blockquote>
<p>只有使用<strong>引号包含文本</strong>的方式创建的String对象之间使用“+”连接产生的新对象才会被<strong>加入字符串池</strong>中。<br>对于所有包含<strong>new方式新建对象（包括null）的“+”连接表达式</strong>，它所产生的新对象都<strong>不会被加入字符串池</strong>中</p>
</blockquote>
<p><em>扩充知识点：</em></p>
<blockquote>
<p>栈（stack）：主要保存基本类型（或者叫内置类型）（char、byte、short、int、long、float、double、boolean）和对象的引用，数据可以共享，速度仅次于寄存器（register），快于堆。</p>
<p>堆（heap）：用于存储对象。</p>
</blockquote>
<hr>
<h2 id="x3D-x3D-与-equals-hashCode-与-equals"><a href="#x3D-x3D-与-equals-hashCode-与-equals" class="headerlink" title="&#x3D;&#x3D; 与 equals?hashCode 与 equals ?"></a>&#x3D;&#x3D; 与 equals?hashCode 与 equals ?</h2><blockquote>
<p><a href="https://blog.csdn.net/meism5/article/details/89029475">【CSDN】&#x3D;&#x3D; 和 equals 的区别</a></p>
</blockquote>
<p> <strong>&#x3D;&#x3D; ：</strong><br> <code>==</code>是操作符</p>
<blockquote>
<p>基本类型：比较值是否相等 （byte,short,char,int,long,float,double,boolean）<br>引用类型：比较堆内存地址是否相等 （new一个引用类型的对象，会重新分配堆内存空间，使用&#x3D;&#x3D;比较返回false）</p>
</blockquote>
<p> 补充：<code>==</code>运行速度比<code>equals()</code>快，因为&#x3D;&#x3D;只是比较引用</p>
<p><strong>equals：</strong>　　<br><code>equals()</code>是Object类的一个方法，Java当中所有的类都是继承于Object这个超类。</p>
<blockquote>
<p>引用类型：默认情况下，比较内存地址值是否相等<br><code>一般重写都是自动生成，比较对象的成员变量值是否相同</code> 
　　</p>
</blockquote>
<p><em>hashCode 与 equals ?</em></p>
<blockquote>
<p><a href="https://blog.csdn.net/maligebilaowang/article/details/129663874">【CSDN】java基础：hashCode() equals()总结</a></p>
</blockquote>
<p><em>equals()性质：</em></p>
<ol>
<li>自反性（reflexive）。对于任意不为null的引用值x，x.equals(x)一定是true。</li>
<li>对称性（symmetric）。对于任意不为null的引用值x和y，当且仅当x.equals(y)是true时，y.equals(x)也是true。</li>
<li>传递性（transitive）。对于任意不为null的引用值x、y和z，如果x.equals(y)是true，同时y.equals(z)是true，那么x.equals(z)一定是true。</li>
<li>一致性（consistent）。对于任意不为null的引用值x和y，如果用于equals比较的对象信息没有被修改的话，多次调用时x.equals(y)要么一致地返回true要么一致地返回false。</li>
<li>非空性。对于任意不为null的引用值x，x.equals(null)返回false。</li>
</ol>
<blockquote>
<p>需要注意的是当equals()方法被override时，hashCode()也要被override。按照一般hashCode()方法的实现来说，相等的对象，它们的hash code一定相等。</p>
</blockquote>
<p><em>hashCode()方法</em></p>
<blockquote>
<p>hashCode()方法给对象返回一个hash code值。</p>
</blockquote>
<ol>
<li>hashCode的存在主要是用于查找的快捷性，如Hashtable，HashMap等，hashCode是用来在散列存储结构中确定对象的存储地址的；</li>
<li>如果两个对象相同，就是适用于equals(java.lang.Object) 方法，那么这两个对象的hashCode一定要相同；</li>
<li>如果对象的equals方法被重写，那么对象的hashCode也尽量重写，并且产生hashCode使用的对象，一定要和equals方法中使用的一致，否则就会违反上面提到的第2点；</li>
<li>两个对象的hashCode相同，并不一定表示两个对象就相同，也就是不一定适用于equals(java.lang.Object) 方法，只能够说明这两个对象在散列存储结构中，如Hashtable，他们“存放在同一个篮子里”</li>
</ol>
<hr>
<h2 id="包装类型的缓存机制了解么？"><a href="#包装类型的缓存机制了解么？" class="headerlink" title="包装类型的缓存机制了解么？"></a>包装类型的缓存机制了解么？</h2><p><a href="https://blog.csdn.net/chenchuxu/article/details/78725966">【CSDN】java 包装类的缓存机制</a></p>
<blockquote>
<p>Integer 、Byte 、Short 、Long 、Character 五大包装类都有缓冲机制，且缓冲的默认值范围都是-128~127</p>
<p>Float,Double,Boolean 三大包装类并没有缓冲机制</p>
</blockquote>
<ol>
<li>前提：发生自动装箱的过程（基本类型–&gt;包装类型）</li>
<li>机制：当通过自动装箱机制创建包装类对象时，首先会判断数值是否在-128—-127的范围内，如果满足条件，则会从缓存（常量池）中寻找指定数值，若找到缓存，则不会新建对象，只是指向指定数值对应的包装类对象，否则，新建对象。</li>
<li><code>原理-请查阅参考博客资料</code></li>
<li>缓存的作用<br>在缓存值范围内的对象可以直接在常量池中取出，不用创建新的对象；<br>当需要频繁的使用同一对象的时候，如果有缓存，则可以避免重复创建同一对象，节省空间开销和时间消耗，提升了性能</li>
</ol>
<hr>
<h2 id="自动装箱与拆箱了解吗？原理是什么？"><a href="#自动装箱与拆箱了解吗？原理是什么？" class="headerlink" title="自动装箱与拆箱了解吗？原理是什么？"></a>自动装箱与拆箱了解吗？原理是什么？</h2><blockquote>
<p><a href="https://www.cnblogs.com/niceyoo/p/12977541.html">【博客园】如何理解Java中的自动拆箱和自动装箱？</a></p>
</blockquote>
<blockquote>
<p>定义：基本数据类型和包装类之间可以自动地相互转换</p>
<p>理解：装箱就是自动将基本数据类型转换为封装类型，拆箱就是自动将封装类型转换为基本数据类型。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 自动装箱</span><br><span class="line">1. Integer a = 100;</span><br><span class="line">// 自动拆箱</span><br><span class="line">2. int b = a;</span><br></pre></td></tr></table></figure>
<p>自动<strong>装箱</strong>，相当于Java编译器替我们执行了 <code>Integer.valueOf(XXX)</code>;</p>
<p>自动<strong>拆箱</strong>，相当于Java编译器替我们执行了 <code>Integer.intValue(XXX)</code>;</p>
<hr>
<h2 id="深拷贝和浅拷贝区别了解吗？什么是引用拷贝？"><a href="#深拷贝和浅拷贝区别了解吗？什么是引用拷贝？" class="headerlink" title="深拷贝和浅拷贝区别了解吗？什么是引用拷贝？"></a>深拷贝和浅拷贝区别了解吗？什么是引用拷贝？</h2><p><strong>浅拷贝和深拷贝的区别</strong></p>
<blockquote>
<p><a href="https://blog.csdn.net/MirkoWug/article/details/108889116">【CSDN】引用拷贝、浅拷贝和深拷贝区别</a></p>
</blockquote>
<p>拷贝一般分为二大类 <strong>引用拷贝</strong> 和 <strong>对象拷贝</strong>，我们通常讲的<strong>深拷贝</strong>和<strong>浅拷贝</strong>都属于对象拷贝</p>
<p><strong>浅拷贝</strong>只复制对象的指针，指向同一块内存，而<strong>深拷贝</strong>复制对象本身，创建一个新的内存，修改一个对象不会影响另一个对象。</p>
<blockquote>
<p><strong>浅拷贝</strong>的属性如果是引用类型，会共享同一个地址，<strong>深拷贝</strong>的属性如果是引用类型，会拷贝地址指向的内存</p>
</blockquote>
<p><strong>引用拷贝</strong><br>顾名思义，即是对引用地址的拷贝，说明引用地址一样，指向堆中的对象是同一个对象。<br>如果对一个对象进行改变，其他对象也会跟着改变。</p>
<hr>
<h2 id="谈谈对-Java-注解的理解，解决了什么问题？"><a href="#谈谈对-Java-注解的理解，解决了什么问题？" class="headerlink" title="谈谈对 Java 注解的理解，解决了什么问题？"></a>谈谈对 Java 注解的理解，解决了什么问题？</h2><hr>
<h2 id="Exception-和-Error-有什么区别？"><a href="#Exception-和-Error-有什么区别？" class="headerlink" title="Exception 和 Error 有什么区别？"></a>Exception 和 Error 有什么区别？</h2><blockquote>
<p><a href="https://blog.csdn.net/single_0910/article/details/114258581">【CSDN】java之异常（Exception）与错误（Error）的区别</a></p>
</blockquote>
<p><strong>Exception:</strong><br>是指程序本身可以处理的异常（可以向上抛出或者捕获处理）</p>
<p><strong>Error:</strong><br>程序无法处理，通常指程序中出现的严重问题</p>
<p>Exception（异常）分为两大类：<strong>运行异常</strong>和<strong>编译异常</strong><br><strong>运行异常</strong>：顾名思义，是程序运行时才会出现的异常。运行异常是java.lang.RuntimeException类及其子类的统称。如NullPointerException（空指针异常）、IndexOutOfBoundsException（数组下标越界异常）等。运行异常一般是由程序逻辑错误导致的，可以通过捕获处理或向上抛出。运行异常的特点是Java编译器不会检查它，也就是说，当程序中可能出现运行异常，也会被编译通过。<br><strong>编译异常</strong>：顾名思义，是程序编译时就会出现的异常。编译异常是java.lang.RuntimeException以外的异常。编译异常必须进行处理，如果不处理，程序就不能编译通过。</p>
<hr>
<h2 id="Java-反射？反射有什么缺点？你是怎么理解反射的（为什么框架需要反射）？"><a href="#Java-反射？反射有什么缺点？你是怎么理解反射的（为什么框架需要反射）？" class="headerlink" title="Java 反射？反射有什么缺点？你是怎么理解反射的（为什么框架需要反射）？"></a>Java 反射？反射有什么缺点？你是怎么理解反射的（为什么框架需要反射）？</h2><p><strong>反射的优点：</strong></p>
<ol>
<li>增加程序的灵活性，避免将程序写死到代码里</li>
<li>代码简洁，提高代码的复用率，外部调用方便</li>
<li>对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法</li>
</ol>
<p><strong>反射的缺点：</strong></p>
<ol>
<li>性能问题</li>
<li>安全限制</li>
<li>程序健壮性</li>
</ol>
<hr>
<h2 id="Java-泛型了解么？什么是类型擦除？介绍一下常用的通配符？"><a href="#Java-泛型了解么？什么是类型擦除？介绍一下常用的通配符？" class="headerlink" title="Java 泛型了解么？什么是类型擦除？介绍一下常用的通配符？"></a>Java 泛型了解么？什么是类型擦除？介绍一下常用的通配符？</h2><blockquote>
<p><a href="https://blog.csdn.net/qq_41356873/article/details/108823040">Java泛型了解么？什么是类型擦除？介绍一下常用的通配符？</a></p>
</blockquote>
<p>Java的泛型是<strong>伪泛型</strong>，这是因为Java在编译期间，所有的泛型信息都会被擦掉，这也就是通常所说<code>类型擦除</code>。</p>
<p><strong>常用的通配符：</strong>  ?,T,K,V,E</p>
<ul>
<li>？ 表示不确定的 java 类型</li>
<li>T (type) 表示具体的一个java类型</li>
<li>K V (key value) 分别代表java键值中的Key Value</li>
<li>E (element) 代表Element</li>
</ul>
<hr>
<h2 id="内部类了解吗？匿名内部类了解吗？"><a href="#内部类了解吗？匿名内部类了解吗？" class="headerlink" title="内部类了解吗？匿名内部类了解吗？"></a>内部类了解吗？匿名内部类了解吗？</h2><blockquote>
<p><a href="https://blog.csdn.net/qq_41464123/article/details/107480664">【CSDN】Java的内部类和匿名类 ， 您了解过吗？</a></p>
</blockquote>
<p><strong>内部类：</strong><br>内部类就是类中类，依附于普通类中，可以间接实现Java类的多继承。</p>
<ol>
<li>成员内部类：就是内部类作为一个成员，存在于类中。<br><code>实例化方法：   外部类.内部类 内部类对象 = new 外部类().new 内部类();</code></li>
<li>静态内部类，在成员内部类的基础上，多了一个static关键字，是静态的类，所有的对象都可以直接通过类名调用。<br><code>实例化方法：   内部类 内部类对象 = new new 内部类(); </code></li>
<li>方法内部类，在类的方法中，定义内部类。<br><code>实例化方法：   new 内部类().内部类方法();   注意只能在当前方法中实例化。</code></li>
<li>匿名内部类，直接new一个没有名字的类，并且直接调用其中的方法。<br><code>实例化方法：    new 内部类()&#123; ...... &#125;.内部类中的方法();</code></li>
</ol>
<hr>
<h2 id="BIO-NIO-AIO-有什么区别"><a href="#BIO-NIO-AIO-有什么区别" class="headerlink" title="BIO,NIO,AIO 有什么区别?"></a>BIO,NIO,AIO 有什么区别?</h2><blockquote>
<p><a href="https://blog.csdn.net/meism5/article/details/89469101">【CSDN】BIO、NIO、AIO 有什么区别？</a></p>
</blockquote>
<ul>
<li>BIO：线程发起IO请求，不管内核是否准备好IO操作，从发起请求起，线程一直阻塞，直到操作完成。</li>
<li>NIO：线程发起IO请求，立即返回；内核在做好IO操作的准备之后，通过调用注册的回调函数通知线程做IO操作，线程开始阻塞，直到操作完成。</li>
<li>AIO：线程发起IO请求，立即返回；内存做好IO操作的准备之后，做IO操作，直到操作完成或者失败，通过调用注册的回调函数通知线程做IO操作完成或者失败。</li>
</ul>
<br>

<ul>
<li>BIO：同步并阻塞，服务器实现模式为一个连接一个线程，即客户端有连接请求时服务器端就需要启动一个线程进行处理，如果这个连接不做任何事情会造成不必要的线程开销，当然可以通过线程池机制改善。</li>
<li>NIO：同步非阻塞，服务器实现模式为一个请求一个线程，即客户端发送的连接请求都会注册到多路复用器上，多路复用器轮询到连接有I&#x2F;O请求时才启动一个线程进行处理。</li>
<li>AIO：异步非阻塞，服务器实现模式为一个有效请求一个线程，客户端的I&#x2F;O请求都是由OS先完成了再通知服务器应用去启动线程进行处理。</li>
</ul>
]]></content>
      <categories>
        <category>Java|面试题</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>面试准备-JAVA集合框架</title>
    <url>/2023/04/27/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/</url>
    <content><![CDATA[<h1 id="说说-List-Set-Map-三者的区别？三者底层的数据结构？"><a href="#说说-List-Set-Map-三者的区别？三者底层的数据结构？" class="headerlink" title="说说 List,Set,Map 三者的区别？三者底层的数据结构？"></a>说说 List,Set,Map 三者的区别？三者底层的数据结构？</h1><ul>
<li>List：储存元素是有序的、可重复的。</li>
<li>Set：储存元素是无序的、不可重复的。</li>
<li>Map：使用键值对（key-value）储存，key是无序、不可重复的；value是无序、可重复的。</li>
</ul>
<h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><p>List：</p>
<ul>
<li>ArrayList：Object[] 数组</li>
<li>Vector：Object[] 数组</li>
<li>LinkedList: 双向链表(Jdk1.6之前为循环链表，Jdk1.7取消了循环)</li>
</ul>
<p>Set：</p>
<ul>
<li>HashSet（无序、唯一）：基于HashMap实现，底层采用HashMap保存元素</li>
<li>LinkedHashSet：是HashSet的子类，内部通过LinkedHashMap实现，</li>
<li>TreeSet（有序、唯一）：红黑树（自平衡的排序二叉树）</li>
</ul>
<p>Map：</p>
<ul>
<li>HashMap：Jdk1.8之前由数组+链表组成，数组是HashMap的主题，链表是为了解决哈希冲突而存在的（拉链法解决冲突）。Jdk1.8之后，当链表长度大于阈值（默认8）将链表转化红黑树，以减少搜索时间。</li>
<li>LinkedHashMap：继承自HashMap，底层仍基于拉链式散列结构即由数组和链表或红黑树组成。另外在基础结构之上增加了一条双向链表，使得上面的结构可以保持键值对的插入顺序。同时通过对链表的相应操作，实现了访问顺序的相关逻辑。</li>
<li>HashTable：数组+链表组成，数组是HashTable的主体，链表则是为了解决哈希冲突而存在的。</li>
<li>TreeMap：红黑树(自平衡排序的二叉树)</li>
</ul>
<h1 id="有哪些集合是线程不安全的？如何解决？"><a href="#有哪些集合是线程不安全的？如何解决？" class="headerlink" title="有哪些集合是线程不安全的？如何解决？"></a>有哪些集合是线程不安全的？如何解决？</h1><blockquote>
<p><a href="https://blog.csdn.net/weixin_45119323/article/details/109067942">【CSDN】集合类线程不安全如何解决</a></p>
</blockquote>
<h2 id="List-ArrayList"><a href="#List-ArrayList" class="headerlink" title="List|ArrayList"></a>List|ArrayList</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">        List&lt;String&gt; list = new ArrayList&lt;&gt;();</span><br><span class="line">        for (int i = 1; i &lt;=20 ; i++) &#123;</span><br><span class="line">            new Thread(()-&gt;&#123;</span><br><span class="line">                list.add(UUID.randomUUID().toString().substring(0,5));</span><br><span class="line">                System.out.println(list);</span><br><span class="line">            &#125;,String.valueOf(i)).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>多线程环境下并发操作ArrayList操作发生异常<br><img src="/2023/04/27/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/Snipaste_2023-04-27_16-44-50.jpg"></p>
<h3 id="解决ArrayList线程不安全"><a href="#解决ArrayList线程不安全" class="headerlink" title="解决ArrayList线程不安全"></a>解决ArrayList线程不安全</h3><ul>
<li>使用Vector</li>
<li>使用Collections.synchronizeList()</li>
<li>使用CopyOnWriteArrayList()</li>
</ul>
<h4 id="Vector"><a href="#Vector" class="headerlink" title="Vector"></a>Vector</h4><p><img src="/2023/04/27/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/Snipaste_2023-04-27_16-51-07.jpg"></p>
<p>Vector底层采用的是加锁的方式，加锁数据的一致性可以保证，但并发性会大大降低。</p>
<p><img src="/2023/04/27/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/Snipaste_2023-04-27_16-54-04.jpg"></p>
<h4 id="Collections-synchronizeList"><a href="#Collections-synchronizeList" class="headerlink" title="Collections.synchronizeList()"></a>Collections.synchronizeList()</h4><p>Collection和Collections的区别:</p>
<ul>
<li>Collection是一个接口，Set接口和List接口都继承自此接口</li>
<li>Collections是一个类，一个辅助工具类，可以使不安全的集合类变为安全的</li>
</ul>
<p><img src="/2023/04/27/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/Snipaste_2023-04-27_16-58-04.jpg"><br><img src="/2023/04/27/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/Snipaste_2023-04-27_16-59-25.jpg"></p>
<h4 id="CopyOnWriteArrayList"><a href="#CopyOnWriteArrayList" class="headerlink" title="CopyOnWriteArrayList()"></a>CopyOnWriteArrayList()</h4><blockquote>
<p>如果是读多写少的情况，推荐使用CopyOnWriteArrayList；</p>
</blockquote>
<p>CopyOnWriteArrayList是JUC包下的一个类。写时复制基于读写分离的思想。</p>
<p>CopyOnWrite的add方法，使用Lock来加锁，一次只允许一个线程进行写操作<br><img src="/2023/04/27/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/Snipaste_2023-04-27_17-04-11.jpg"><br><img src="/2023/04/27/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/Snipaste_2023-04-27_17-04-28.jpg"></p>
<p>CopyOnWrite容器被称为写时复制的容器，往一个容器当中添加元素的时候，不直接往当前容器Object[] 添加，而是先将当前的容器Object[] 进行copy，复制出一个新的容器Object[] newElements，往新容器里添加元素，元素添加完成之后，将原容器的引用指向新的容器。<br>这样做的好处是可以并发的读，而不需要加锁。</p>
<h2 id="Set-HashSet"><a href="#Set-HashSet" class="headerlink" title="Set|HashSet"></a>Set|HashSet</h2><p><img src="/2023/04/27/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/Snipaste_2023-04-27_17-10-09.jpg"></p>
<p><strong>HashSet底层实现</strong><br><img src="/2023/04/27/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/Snipaste_2023-04-27_17-11-01.jpg"></p>
<p>HashMap以键值对储存数据，而HashSet中add方法只添加一个元素。<br>value值是一个Object类型的常量，HashSet不关心value值。<br><img src="/2023/04/27/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/Snipaste_2023-04-27_17-12-57.jpg"><br><img src="/2023/04/27/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/Snipaste_2023-04-27_17-12-26.jpg"></p>
<h3 id="解决HashSet线程不安全"><a href="#解决HashSet线程不安全" class="headerlink" title="解决HashSet线程不安全"></a>解决HashSet线程不安全</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">    Set&lt;String&gt; set=new HashSet&lt;&gt;();</span><br><span class="line">    for(int i=1;i&lt;=40;i++)&#123;</span><br><span class="line">        new Thread(()-&gt;&#123;</span><br><span class="line">            set.add(UUID.randomUUID().toString().substring(0,5));</span><br><span class="line">            System.out.println(set);</span><br><span class="line">        &#125;,String.valueOf(i)).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Collections-synchronizeSet"><a href="#Collections-synchronizeSet" class="headerlink" title="Collections.synchronizeSet"></a>Collections.synchronizeSet</h4><p><img src="/2023/04/27/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/Snipaste_2023-04-27_17-17-49.jpg"></p>
<h4 id="CopyOnWriteHashSet"><a href="#CopyOnWriteHashSet" class="headerlink" title="CopyOnWriteHashSet"></a>CopyOnWriteHashSet</h4><p>JUC包下的一个类<br><img src="/2023/04/27/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/Snipaste_2023-04-27_17-20-25.jpg"></p>
<h2 id="Map-HashMap"><a href="#Map-HashMap" class="headerlink" title="Map|HashMap"></a>Map|HashMap</h2><p><img src="/2023/04/27/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/Snipaste_2023-04-27_17-24-09.jpg"></p>
<h3 id="解决HashMap线程不安全"><a href="#解决HashMap线程不安全" class="headerlink" title="解决HashMap线程不安全"></a>解决HashMap线程不安全</h3><h4 id="HashTable"><a href="#HashTable" class="headerlink" title="HashTable"></a>HashTable</h4><p><img src="/2023/04/27/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/Snipaste_2023-04-27_17-27-06.jpg"></p>
<p><img src="/2023/04/27/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/Snipaste_2023-04-27_17-29-12.jpg"></p>
<h4 id="Collections-synchronizedMap"><a href="#Collections-synchronizedMap" class="headerlink" title="Collections.synchronizedMap"></a>Collections.synchronizedMap</h4><p><img src="/2023/04/27/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/Snipaste_2023-04-27_17-31-15.jpg"></p>
<h4 id="ConcurrentHashMap"><a href="#ConcurrentHashMap" class="headerlink" title="ConcurrentHashMap"></a>ConcurrentHashMap</h4><p>JUC下的包<br><img src="/2023/04/27/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/Snipaste_2023-04-27_17-33-32.jpg"></p>
<h2 id="拓展知识点-JUC"><a href="#拓展知识点-JUC" class="headerlink" title="拓展知识点-JUC"></a>拓展知识点-JUC</h2><p><a href="https://juejin.cn/post/6997767449567313927">JUC系列（一）| 什么是JUC？</a></p>
<h1 id="比较-HashSet、LinkedHashSet-和-TreeSet-三者的异同"><a href="#比较-HashSet、LinkedHashSet-和-TreeSet-三者的异同" class="headerlink" title="比较 HashSet、LinkedHashSet 和 TreeSet 三者的异同"></a>比较 HashSet、LinkedHashSet 和 TreeSet 三者的异同</h1><blockquote>
<p><a href="https://blog.csdn.net/JinYJ2014/article/details/122753667">【CSDN】(第三点) HashSet LinkedHashSet 和 TreeSet 三者的对比</a></p>
</blockquote>
<ol>
<li>HashSet、LinkedHashSet 和 TreeSet 都是 Set 接口的实现类,<strong>都能保证元素唯一，并且都不是线程安全的。</strong></li>
<li>HashSet、LinkedHashSet 和 TreeSet 的主要区别在于<strong>底层数据结构不同。</strong><ol>
<li>HashSet 的底层数据结构是哈希表（基于 HashMap 实现）。</li>
<li>LinkedHashSet 的底层数据结构是链表和哈希表，元素的插入和取出顺序满足 FIFO。</li>
<li>TreeSet 底层数据结构是红黑树，元素是有序的，排序的方式有自然排序和定制排序。</li>
</ol>
</li>
<li>底层数据结构不同又导致这三者的<strong>应用场景不同</strong>。<ol>
<li>HashSet 用于不需要保证元素插入和取出顺序的场景</li>
<li>LinkedHashSet 用于保证元素的插入和取出顺序满足 FIFO 的场景</li>
<li>TreeSet 用于支持对元素自定义排序规则的场景。</li>
</ol>
</li>
</ol>
<h1 id="HashMap-和-Hashtable-的区别？HashMap-和-HashSet-区别？HashMap-和-TreeMap-区别？"><a href="#HashMap-和-Hashtable-的区别？HashMap-和-HashSet-区别？HashMap-和-TreeMap-区别？" class="headerlink" title="HashMap 和 Hashtable 的区别？HashMap 和 HashSet 区别？HashMap 和 TreeMap 区别？"></a>HashMap 和 Hashtable 的区别？HashMap 和 HashSet 区别？HashMap 和 TreeMap 区别？</h1><h2 id="HashMap-和-Hashtable-的区别"><a href="#HashMap-和-Hashtable-的区别" class="headerlink" title="HashMap 和 Hashtable 的区别"></a>HashMap 和 Hashtable 的区别</h2><blockquote>
<p><a href="https://blog.csdn.net/xuhuaabc/article/details/91475761">HashMap和Hashtable的区别</a></p>
</blockquote>
<ol>
<li>继承的父类不同<ol>
<li>HashMap继承自AbstractMap类。但二者都实现了Map接口</li>
<li>Hashtable继承自Dictionary类，Dictionary类是一个已经被废弃的类（见其源码中的注释）。</li>
</ol>
</li>
<li>HashMap线程不安全,HashTable线程安全</li>
<li>包含的contains方法不同<ol>
<li>HashMap是没有contains方法的，而包括containsValue和containsKey方法；</li>
<li>hashtable则保留了contains方法，效果同containsValue,还包括containsValue和containsKey方法。</li>
</ol>
</li>
<li>是否允许null值<ol>
<li>Hashmap是允许key和value为null值的，用containsValue和containsKey方法判断是否包含对应键值对</li>
<li>HashTable键值对都不能为空，否则包空指针异常。</li>
</ol>
</li>
<li>计算hash值方式不同</li>
<li>扩容方式不同（容量不够）<ol>
<li>当容量不足时要进行resize方法，而resize的两个步骤<ol>
<li>扩容</li>
<li>rehash<ol>
<li>HashMap 哈希扩容必须要求为原容量的2倍，而且一定是2的幂次倍扩容结果，而且每次扩容时，原来数组中的元素依次重新计算存放位置，并重新插入；</li>
<li>Hashtable扩容为原容量2倍加1；</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li>解决hash冲突方式不同（地址冲突）<ol>
<li>Jdk1.8后，HashMap中，当出现冲突时可以（Jdk1.8之前这里不论述）<ol>
<li>如果冲突数量小于8，则是以链表方式解决冲突。</li>
<li>当冲突大于等于8时，就会将冲突的Entry转换为<strong>红黑树进行存储。</strong></li>
<li>而又当数量小于6时，则又转化为链表存储</li>
</ol>
</li>
</ol>
</li>
</ol>
<h2 id="HashMap-和-HashSet-的区别"><a href="#HashMap-和-HashSet-的区别" class="headerlink" title="HashMap 和 HashSet 的区别"></a>HashMap 和 HashSet 的区别</h2><blockquote>
<p><a href="https://blog.csdn.net/huhahuha_/article/details/84450967">HashSet与HashMap的区别</a></p>
</blockquote>
<p>区别-储存方式：</p>
<ul>
<li>HashSet实现了Set接口, 仅存储对象; </li>
<li>HashMap实现了 Map接口, 存储的是键值对;</li>
</ul>
<p>相同点-底层实现：</p>
<ul>
<li>HashSet底层其实是用HashMap实现存储的, HashSet封装了一系列HashMap的方法. 依靠HashMap来存储元素值,(利用hashMap的key键进行存储), 而value值默认为Object对象. 所以HashSet也不允许出现重复值, 判断标准和HashMap判断标准相同, 两个元素的hashCode相等并且通过equals()方法返回true.</li>
</ul>
<h2 id="HashMap-和-TreeMap-的区别"><a href="#HashMap-和-TreeMap-的区别" class="headerlink" title="HashMap 和 TreeMap 的区别"></a>HashMap 和 TreeMap 的区别</h2><blockquote>
<p><a href="https://blog.csdn.net/zhangguofengqiang/article/details/52706237">HashMap与TreeMap的区别</a></p>
</blockquote>
<p>相同点：</p>
<ul>
<li>继承了AbstractMap</li>
</ul>
<p>不同点：</p>
<ul>
<li>线程安全：<ul>
<li>HashMap非线程安全</li>
<li>TreeMap非线程安全</li>
</ul>
</li>
<li>调优选项：<ul>
<li>HashMap 基于哈希表实现，可以调优初始容量和负载因子 </li>
<li>基于红黑树实现。TreeMap没有调优选项，因为该树总处于平衡状态。</li>
</ul>
</li>
<li>应用场景：<ul>
<li>适用于在Map中插入、删除和定位元素。</li>
<li>适用于按自然顺序或自定义顺序遍历键(key)。</li>
</ul>
</li>
<li>速度效率：<ul>
<li>HashMap通常比TreeMap快一点（树和哈希表的数据结构使然）</li>
</ul>
</li>
<li>是否有序<ul>
<li>HashMap 无序</li>
<li>TreeMap 有序，默认按键值升序、可指定排序比较器实现自定义排序规则</li>
</ul>
</li>
</ul>
<h1 id="HashMap-的底层实现"><a href="#HashMap-的底层实现" class="headerlink" title="HashMap 的底层实现"></a>HashMap 的底层实现</h1>]]></content>
      <categories>
        <category>Java|面试题</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
</search>
