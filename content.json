{"meta":{"title":"ODUODUOK","subtitle":"","description":"","author":"哦哆哆克","url":"https://oduoduoke.github.io","root":"/"},"pages":[{"title":"about","date":"2023-04-25T13:14:26.000Z","updated":"2023-04-25T13:14:26.510Z","comments":true,"path":"about/index.html","permalink":"https://oduoduoke.github.io/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2023-04-25T13:14:37.000Z","updated":"2023-04-25T13:31:44.672Z","comments":true,"path":"categories/index.html","permalink":"https://oduoduoke.github.io/categories/index.html","excerpt":"","text":""},{"title":"guestbook","date":"2023-04-25T13:21:10.000Z","updated":"2023-04-25T13:21:10.085Z","comments":true,"path":"guestbook/index.html","permalink":"https://oduoduoke.github.io/guestbook/index.html","excerpt":"","text":""},{"title":"link","date":"2023-04-25T13:32:23.000Z","updated":"2023-04-25T13:32:35.096Z","comments":true,"path":"link/index.html","permalink":"https://oduoduoke.github.io/link/index.html","excerpt":"","text":""},{"title":"tags","date":"2023-04-25T13:01:02.000Z","updated":"2023-04-25T13:31:58.655Z","comments":true,"path":"tags/index.html","permalink":"https://oduoduoke.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"我就是个大傻叉","slug":"个人心情/我就是个大傻叉","date":"2023-04-25T14:30:47.000Z","updated":"2023-04-25T14:37:02.073Z","comments":true,"path":"2023/04/25/个人心情/我就是个大傻叉/","link":"","permalink":"https://oduoduoke.github.io/2023/04/25/%E4%B8%AA%E4%BA%BA%E5%BF%83%E6%83%85/%E6%88%91%E5%B0%B1%E6%98%AF%E4%B8%AA%E5%A4%A7%E5%82%BB%E5%8F%89/","excerpt":"","text":"【官方教程-butterfly】我没有好好看github的readmd文件，里面官方教程写的很清楚如何使用主题、美化主题… 我绕了大半个圈子在网上这里查哪里查的…!!!仅以此记录愚蠢的自己!!!","categories":[{"name":"个人心情","slug":"个人心情","permalink":"https://oduoduoke.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%BF%83%E6%83%85/"}],"tags":[]},{"title":"离职日记-04-25","slug":"离职日记/离职日记-04-25","date":"2023-04-25T12:02:20.000Z","updated":"2023-04-25T14:41:41.433Z","comments":true,"path":"2023/04/25/离职日记/离职日记-04-25/","link":"","permalink":"https://oduoduoke.github.io/2023/04/25/%E7%A6%BB%E8%81%8C%E6%97%A5%E8%AE%B0/%E7%A6%BB%E8%81%8C%E6%97%A5%E8%AE%B0-04-25/","excerpt":"","text":"今天的睡眠还算ok今天起来的时间是06:14，感觉还是很可以了哎！反正我觉得睡的是比较舒服的。 上午在干嘛上午的话，今天没记录单词，把昨天的面试准备|JAVA-基础给二次修正优化了下，对于昨天有的问题没有完善的，今天作了补充。 今天原本准备说记单词的，但是当我打开百词斩的时候，我发现一件事情，就是我昨天已记录过的单词，会今天在复习一边，那么就意味着我是否要把它重新在blog里面在记录一遍呢。 最后的解决方法是给hexo安装了一个搜索插件，这样就可以遇到单词搜搜博客，然后直接在新的博客里面贴链接就搞定了，不用重复记录，因为重复记录也存在一个小区别，就是我之前记录的单词的助记词不一定和我现在写的一致，因为百词斩app里面的单词信息都是一致的，唯一的区别就可能助记词不一样！ 中午出去吃个饭，今天终于不是面条了 青椒肉丝盖饭 说句其他话，老板的青椒有的都是坏掉的，我在吃饭的时候能明显看到一些黑色的部分，哎 做生意嘛，一次性买太多菜用不完坏掉很正常呀！但是丢了钱不是就亏了嘛！只能是做菜给客人吃了把钱赚了才是真理！ 下午我原本想午休的下午没有午休，或者说只是躺平了一会会把，就起来了。然后在研究hexo，因为我目前都是通过cmd命令行去敲命令的，可是我是程序员啊！这种重复性劳动我不想干了，我就在百度查资料，然后写windows的bat脚本，通过脚本去一键执行我想要实现的效果，而且不用重复劳动！美滋滋的~ 于是，我就搞了一个大半下午！！！ 算了下时间哈，搞脚本也就才花了最多2小时，然后后面还处理了下JMT公司项目的bug花了接近45分钟把，其实也不算花了很多时间吧！还是怪我没早点搞，从下午2点才开始干正经事！！！ 今天的面试题还没有刷呢，就上午完善了下昨天的JAVA|面试基础,哎 账越拉越多，明天还要搞单词、面试、事情多着呢~ 其他就好像没啥说的呢我觉得今天很有意义的事情就是，我把昨天的面试基础的博客重新梳理一遍，然后在梳理的过程中自己也是在逐渐的了解慢慢巩固基础。 还有就是今天下午在写bat的脚本，这个也是很有意思的一件事情。对呀，既然是程序员，就应该以程序员的方式来解决问题，这是一个过程，是一个精进的过程！对我自己是有帮助的。 Hexo支持搜索的功能也是我昨天在想的一件事，如果我博客文章多了，我如何快速的找到我想要的东西呢。今天就搞起了搜索功能这真是太棒了！ Hexo添加搜索插件-hexo-generator-searchdb Hexo通过windows的bat脚本联动","categories":[{"name":"离职日记","slug":"离职日记","permalink":"https://oduoduoke.github.io/categories/%E7%A6%BB%E8%81%8C%E6%97%A5%E8%AE%B0/"}],"tags":[]},{"title":"Hexo通过windows的bat脚本联动","slug":"Hexo博客相关/Hexo通过windows的bat脚本联动","date":"2023-04-25T06:28:27.000Z","updated":"2023-04-25T14:39:58.993Z","comments":true,"path":"2023/04/25/Hexo博客相关/Hexo通过windows的bat脚本联动/","link":"","permalink":"https://oduoduoke.github.io/2023/04/25/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/Hexo%E9%80%9A%E8%BF%87windows%E7%9A%84bat%E8%84%9A%E6%9C%AC%E8%81%94%E5%8A%A8/","excerpt":"","text":"想法初衷 通过Windows的bat脚本一键化对hexo执行部署打包等相关命令 参考资料bat批处理脚本中文乱码问题解决 .Bat之批处理实现手动输入变量参数 使用bat脚本自动打开cmd并执行命令 写一个打开cmd窗口并执行cmd命令的Windows脚本（.bat文件） bat文件命令行去除变量的空格 Bat 等待一段指定的时间 Windows copy命令 bat 复制文件和文件夹（目录 未使用，但是觉得以后会涉及，于是记录下来 在批处理(cmd，bat)下传递参数和获取参数 代码命令一键运行hexo s12345678910:: 防止中文乱码chcp 65001@echo off:: 获取最新代码start cmd /c &quot;cd/d D:\\workSpace\\Blog\\blog\\themes\\butterfly &amp;&amp; git pull &quot;:: 清空public打包目录/打包资源/本地部署start cmd /k &quot;cd/d D:\\workSpace\\Blog\\blog &amp;&amp; hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&quot; 通过bat脚本替代hexo n命令创建新页面123456789101112131415161718192021222324252627282930:: 防止中文乱码chcp 65001:: 不打印其他命令的回显(放在&#x27;@echo off&#x27;上此注释会被输出到控制台)@echo off:: 配合&#x27;goto begin&#x27;回到此处重复执行操作:: :begin:: 获取输入set input=set /p input=请输入新增页面名称::: 去除输入的所有空格（因为空格会导致hexo n创建新页面失败）set &quot;input=%input: =%&quot;:: 打印用户输入参数echo %input%:: 执行cmd命令(cmd /c 表示执行完毕后关闭窗口)start cmd /c &quot;cd/d D:\\workSpace\\Blog\\blog &amp;&amp; hexo n &#x27;%input%&#x27; &quot;:: 可配合&#x27;:begin&#x27;进行重复执行操作:: goto begin:: 暂停:: pause:: 退出关闭窗口exit 通过bat脚本替代hexo n命令创建新页面 2.0 对创建完成的文件及文件夹复制到指定目录下(vscode工作目录) 12345678910111213141516171819202122232425262728293031323334353637383940414243444546:: 防止中文乱码chcp 65001:: 不打印其他命令的回显(放在&#x27;@echo off&#x27;上此注释会被输出到控制台)@echo off:: 初始化参数配置set BlogPath=D:\\workSpace\\Blog\\blogecho 博客目录：%BlogPath%set CopyFrom=D:\\workSpace\\Blog\\blog\\source\\_posts\\echo 复制目录：%CopyFrom%set ParseTo=D:\\echo 粘贴目录：%ParseTo%:: 配合&#x27;goto begin&#x27;回到此处重复执行操作:: :begin:: 获取输入set input=set /p input=请输入新增页面名称::: 去除输入的所有空格（因为空格会导致hexo n创建新页面失败）set &quot;input=%input: =%&quot;:: 打印用户输入参数echo %input%:: 执行cmd命令(cmd /c 表示执行完毕后关闭窗口)start cmd /c &quot;cd/d %BlogPath% &amp;&amp; hexo n &#x27;%input%&#x27; &quot;:: 等待最长5s继续往下执行操作（原因：需要等待 hexo n 的文件创建好，然后执行复制操作!）timeout /t 5 /nobreak &gt; NUL:: 复制创建文件到vscode工作目录下copy %CopyFrom%%input%.md %ParseTo%:: 创建空文件夹md %ParseTo%%input%:: 可配合&#x27;:begin&#x27;进行重复执行操作:: goto begin:: 暂停:: pause:: 退出关闭窗口exit 通过bat脚本替代hexo n命令创建新页面 3.0 选择一个目录下，创建新页面（便于管理文件） 暂时搁置，待后续更新~ 一键推送提交代码 vscode里面的文件写好了需要提交仓库（备份用途）hexo下的文件（处理图片问题）打包之后也需要提交推送到仓库 vscode下文件提交git todo hexo下部署文件提交git todo bat命令行去除空格命令 存在空格的情况影响执行命令hexo n的结果-&gt;失败! 123456789101112131415161718chcp 65001@echo offSETLOCAL ENABLEDELAYEDEXPANSIONset abc= uvwxyz:delleftif &quot;%abc:~0,1%&quot;==&quot; &quot; set abc=%abc:~1%&amp;&amp;goto delleftecho 去除左边空格后结果为:%abc%set abc=uvwxyz :delrightif &quot;%abc:~-1%&quot;==&quot; &quot; set abc=%abc:~0,-1%&amp;&amp;goto delrightecho 去掉右边空格后结果为:%abc%set abc= u v w x y z set &quot;abc=%abc: =%&quot;echo 去除所有空格后结果为:%abc%pause","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://oduoduoke.github.io/categories/Hexo/"}],"tags":[{"name":"Windowsin系统bat脚本","slug":"Windowsin系统bat脚本","permalink":"https://oduoduoke.github.io/tags/Windowsin%E7%B3%BB%E7%BB%9Fbat%E8%84%9A%E6%9C%AC/"}]},{"title":"Hexo添加搜索插件-hexo-generator-searchdb","slug":"Hexo博客相关/Hexo添加搜索插件-hexo-generator-searchdb","date":"2023-04-25T03:04:23.000Z","updated":"2023-04-25T14:39:02.977Z","comments":true,"path":"2023/04/25/Hexo博客相关/Hexo添加搜索插件-hexo-generator-searchdb/","link":"","permalink":"https://oduoduoke.github.io/2023/04/25/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/Hexo%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E6%8F%92%E4%BB%B6-hexo-generator-searchdb/","excerpt":"","text":"【CSDN】hexo博客添加本地搜索功能 到blog目录下 添加插件 hexo-generator-searchdb1npm install hexo-generator-searchdb --save 修改博客目录下_config.yml配置文件 添加以下内容 12345search: path: search.xml field: post content: true format: html 补充描述： path：表示搜索后生成的文件路径，可以生成xml和json两种格式 field：表示搜索的范围，有“post、page和all”三种值 post：所有的文章； page：所有顶部导航选项的页面； all：所有的文章和顶部导航选项的页面。 content：是否包含搜索到的文章的全部内容。如果false，生成的结果只包括标题和创建时间这些信息，没有文章主体。默认情况下是true. format：搜索到的内容、选项的格式。 html(默认)：将html原文本缩略。 striptags：将html原文本缩略，并删除所有标记。 raw：记下每一篇文章或每一页的文字。 修改主题Theme目录下_config.yml配置文件 启动Hexo","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://oduoduoke.github.io/categories/Hexo/"}],"tags":[{"name":"hexo-generator-searchdb","slug":"hexo-generator-searchdb","permalink":"https://oduoduoke.github.io/tags/hexo-generator-searchdb/"}]},{"title":"百词斩-记单词 04.25","slug":"英语学习/百词斩-记单词-04-25","date":"2023-04-25T02:37:41.000Z","updated":"2023-04-25T14:42:36.161Z","comments":true,"path":"2023/04/25/英语学习/百词斩-记单词-04-25/","link":"","permalink":"https://oduoduoke.github.io/2023/04/25/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E7%99%BE%E8%AF%8D%E6%96%A9-%E8%AE%B0%E5%8D%95%E8%AF%8D-04-25/","excerpt":"","text":"数据来源：百词斩APP faulty","categories":[{"name":"English","slug":"English","permalink":"https://oduoduoke.github.io/categories/English/"}],"tags":[{"name":"百词斩","slug":"百词斩","permalink":"https://oduoduoke.github.io/tags/%E7%99%BE%E8%AF%8D%E6%96%A9/"}]},{"title":"离职日记 04.24","slug":"离职日记/离职日记-04-24","date":"2023-04-24T11:54:55.000Z","updated":"2023-04-25T14:41:35.626Z","comments":true,"path":"2023/04/24/离职日记/离职日记-04-24/","link":"","permalink":"https://oduoduoke.github.io/2023/04/24/%E7%A6%BB%E8%81%8C%E6%97%A5%E8%AE%B0/%E7%A6%BB%E8%81%8C%E6%97%A5%E8%AE%B0-04-24/","excerpt":"","text":"又是5点30多醒了下今天早上一如既往的还是5点30左右醒了的。不明白的就是为啥 都离职了，明明没有那么多的事情要考虑、也没有所谓服务器挂了的压力之类的，我还是不能够睡到8点起来呢？？？ 我就很羡慕那些睡觉一直睡到9、10点的人（那种熬夜很晚睡的不算）。 开始起床早上07:46我终于起床了，是起床哈！反正之前05点多醒了之后，还是尽力在继续睡觉的，基本是在06:30我就基本清醒然后在床上玩了玩手机的。 手机锁屏壁纸很好看 hhh 特别逗我觉得！目前的手机这个壁纸我是比较喜欢的，但是我这个人吧，有时候心浮气躁的，不知大那天就又换了一个咯！只能说目前来讲，深得我心~ 记单词啦今天从08:22-10:33一直在哪里记单词 百词斩-记单词0424 ，就是一边记单词 一边输出到博客中。37个单词，但是耗时居然2小时！！！我觉得是有点吃惊的，而且我中间没有休息中断，可能感觉效率会有一点低哎！然后就是整个上午的时间基本花在记单词这件事情上了，其他的啥也没干。 我还没投简历，只是挂着而已对方HR找的我，大概了解了下就是单休，然后工作时间基本是晚上9点下班，但是工作不会特别饱和，然后呢 五险都是全额缴纳，没有公积金，我是准备如果有机会就面试试试看自己到底啥个水平，至少了解到自己的底细吧！ 下午在做面试准备 我自己的感觉就是，基础很差！！！有一些很基础的JAVA知识我其实掌握的并不深，可以说懂一点皮毛。自我分析下来就是，培训班出来了之后，虽然工作了几年，但是这几年的工作没有深入学习，一直在CURD所以导致我现在很尴尬的就是，当我从公司裸辞出来了之后，我发现我要对下一份面试工作准备时候，我好多东西都不太懂的！心里草泥马飞过… 下午看了一会面试题，也是在一边查资料一边输出记录到博客中，但最后结果是只搞了一半不到，还有就是 我可能比较担心的就是，可能我查的网上的一些资料并不是很准确！就是可能别人也说的是错的那种。但是没办法的啊，我只有多查下，多看几篇文章确认。还有就是自己动手能力太弱了，有的东西掌握的太浅层的，之前的工作基本就是简单的CURD还有一些是面向百度编程了的。所以说过的太安逸是会害死人的。 出去刮了个彩票，意外之喜我抱着送钱的态度去买了一张20的彩票刮，是竖着刮下来的，然后就是前面几排都是无了，最后一排20元！啊哈！这就是意外之喜啊，我原本就没想着会中的，然后就是 既然中了，那么就不玩了，不亏也挺好的！ 中的20元拿在手里，比手机里面的数字看着更舒服哎！ 晚上吃大饼+可乐晚餐花费5+2一共7元，中午吃的面条（豌杂面），晚上就吃点其他的，而且确实好久没吃过咯！凑合凑合又是一顿挨过去~（目前离职状态，感觉贫穷在向我挥挥手，即将给我一个拥抱） 我和我大哥如图所示哎，现在女孩子真的是大哥！我反正惹不起，一开始就被我大哥征服了，我现在就是小喽喽。有时候这个娃儿能气死我，有时候把 我又很想保护她，不过我还是大部分时候很想收拾她一顿（揪脸吨儿）哼，让你不乖！","categories":[{"name":"离职日记","slug":"离职日记","permalink":"https://oduoduoke.github.io/categories/%E7%A6%BB%E8%81%8C%E6%97%A5%E8%AE%B0/"}],"tags":[]},{"title":"面试准备|JAVA-基础","slug":"面试准备/面试准备-JAVA-基础","date":"2023-04-24T06:14:12.000Z","updated":"2023-04-25T14:41:56.441Z","comments":true,"path":"2023/04/24/面试准备/面试准备-JAVA-基础/","link":"","permalink":"https://oduoduoke.github.io/2023/04/24/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-JAVA-%E5%9F%BA%E7%A1%80/","excerpt":"","text":"Java 中的几种基本数据类型是什么？对应的包装类型是什么？各自占用多少字节呢？ 【CSDN】Java基本数据类型有哪些？他们分别占几个字节？为什么？ 【知乎】Java包装类 Java中提供了8种基本类型。 基本类型 包装类型 区别 占用字节 byte Byte 整数类型 1个字节 short Short 整数类型 2个字节 int Integer 整数类型 4个字节 long Long 整数类型 8个字节 float Float 浮点类型 4个字节 double Double 浮点类型 8个字节 char Character 字符类型 2个字节 boolean Boolean 布尔类型 boolean单个占4个字节，boolean数组1个字节 问：一个汉字占用几个字节？ 答：这和编码有关，UTF8一个汉字占3个字节，GBK一个汉字占2个字节。 String 、 StringBuffer 和 StringBuilder 的区别是什么? String 为什么是不可变的? 【CSDN】String、StringBuffer、StringBuilder的区别——（详细叙述） 【知乎】如何理解 String 类型值的不可变？ String 、 StringBuffer 和 StringBuilder 的区别 String StringBuffer StringBuilder 执行速度 最差 其次 最高 线程安全 线程安全 线程安全 线程不安全 使用场景 少量字符串操作 多线程环境下的大量操作 单线程环境下的大量操作 String 为什么是不可变的? 12345public final class String implements java.io.Serializable, Comparable&lt;String&gt;, CharSequence,Constable, ConstantDesc &#123; private final byte[] value; //...&#125; String 类被 final 修饰导致其不能被继承，进而避免了子类破坏 String 不可变 保存字符串的数组被 final 修饰且为私有的，并且String 类没有提供&#x2F;暴露修改这个字符串的方法 String s1 &#x3D; new String(“abc”) 这段代码创建了几个字符串对象？ 【CSDN】java中String s &#x3D; new String(“abc”)创建了几个对象 【博客园】String s&#x3D;new String(“abc”)创建了几个对象? 答案是两个 例题解析： 123456789#创建了一个String对象String str=&quot;abc&quot;; #创建了一个String对象String a=&quot;abc&quot;; String b=&quot;abc&quot;;#创建了三个String对象String a=&quot;ab&quot;+&quot;cd&quot;; 在JAVA虚拟机（JVM）中存在着一个字符串池，其中保存着很多String对象，并且可以被共享使用，因此它提高了效率。 String a=&quot;abc&quot;，这行代码被执行的时候，JAVA虚拟机首先在字符串池中查找是否已经存在了值为”abc”的这么一个对象，它的判断依据是String类equals(Object obj)方法的返回值。如果有，则不再创建新的对象，直接返回已存在对象的引用；如果没有，则先创建这个对象，然后把它加入到字符串池中，再将它的引用返回。 哪些情况下可以加入字符串池？ 只有使用引号包含文本的方式创建的String对象之间使用“+”连接产生的新对象才会被加入字符串池中。对于所有包含new方式新建对象（包括null）的“+”连接表达式，它所产生的新对象都不会被加入字符串池中 扩充知识点： 栈（stack）：主要保存基本类型（或者叫内置类型）（char、byte、short、int、long、float、double、boolean）和对象的引用，数据可以共享，速度仅次于寄存器（register），快于堆。 堆（heap）：用于存储对象。 &#x3D;&#x3D; 与 equals?hashCode 与 equals ? 【CSDN】&#x3D;&#x3D; 和 equals 的区别 &#x3D;&#x3D; ： ==是操作符 基本类型：比较值是否相等 （byte,short,char,int,long,float,double,boolean）引用类型：比较堆内存地址是否相等 （new一个引用类型的对象，会重新分配堆内存空间，使用&#x3D;&#x3D;比较返回false） 补充：==运行速度比equals()快，因为&#x3D;&#x3D;只是比较引用 equals： equals()是Object类的一个方法，Java当中所有的类都是继承于Object这个超类。 引用类型：默认情况下，比较内存地址值是否相等一般重写都是自动生成，比较对象的成员变量值是否相同 hashCode 与 equals ? 【CSDN】java基础：hashCode() equals()总结 equals()性质： 自反性（reflexive）。对于任意不为null的引用值x，x.equals(x)一定是true。 对称性（symmetric）。对于任意不为null的引用值x和y，当且仅当x.equals(y)是true时，y.equals(x)也是true。 传递性（transitive）。对于任意不为null的引用值x、y和z，如果x.equals(y)是true，同时y.equals(z)是true，那么x.equals(z)一定是true。 一致性（consistent）。对于任意不为null的引用值x和y，如果用于equals比较的对象信息没有被修改的话，多次调用时x.equals(y)要么一致地返回true要么一致地返回false。 非空性。对于任意不为null的引用值x，x.equals(null)返回false。 需要注意的是当equals()方法被override时，hashCode()也要被override。按照一般hashCode()方法的实现来说，相等的对象，它们的hash code一定相等。 hashCode()方法 hashCode()方法给对象返回一个hash code值。 hashCode的存在主要是用于查找的快捷性，如Hashtable，HashMap等，hashCode是用来在散列存储结构中确定对象的存储地址的； 如果两个对象相同，就是适用于equals(java.lang.Object) 方法，那么这两个对象的hashCode一定要相同； 如果对象的equals方法被重写，那么对象的hashCode也尽量重写，并且产生hashCode使用的对象，一定要和equals方法中使用的一致，否则就会违反上面提到的第2点； 两个对象的hashCode相同，并不一定表示两个对象就相同，也就是不一定适用于equals(java.lang.Object) 方法，只能够说明这两个对象在散列存储结构中，如Hashtable，他们“存放在同一个篮子里” 包装类型的缓存机制了解么？【CSDN】java 包装类的缓存机制 Integer 、Byte 、Short 、Long 、Character 五大包装类都有缓冲机制，且缓冲的默认值范围都是-128~127 Float,Double,Boolean 三大包装类并没有缓冲机制 前提：发生自动装箱的过程（基本类型–&gt;包装类型） 机制：当通过自动装箱机制创建包装类对象时，首先会判断数值是否在-128—-127的范围内，如果满足条件，则会从缓存（常量池）中寻找指定数值，若找到缓存，则不会新建对象，只是指向指定数值对应的包装类对象，否则，新建对象。 原理-请查阅参考博客资料 缓存的作用在缓存值范围内的对象可以直接在常量池中取出，不用创建新的对象；当需要频繁的使用同一对象的时候，如果有缓存，则可以避免重复创建同一对象，节省空间开销和时间消耗，提升了性能 自动装箱与拆箱了解吗？原理是什么？ 【博客园】如何理解Java中的自动拆箱和自动装箱？ 定义：基本数据类型和包装类之间可以自动地相互转换 理解：装箱就是自动将基本数据类型转换为封装类型，拆箱就是自动将封装类型转换为基本数据类型。 1234// 自动装箱1. Integer a = 100;// 自动拆箱2. int b = a; 自动装箱，相当于Java编译器替我们执行了 Integer.valueOf(XXX); 自动拆箱，相当于Java编译器替我们执行了 Integer.intValue(XXX); 深拷贝和浅拷贝区别了解吗？什么是引用拷贝？浅拷贝和深拷贝的区别 【CSDN】引用拷贝、浅拷贝和深拷贝区别 拷贝一般分为二大类 引用拷贝 和 对象拷贝，我们通常讲的深拷贝和浅拷贝都属于对象拷贝 浅拷贝只复制对象的指针，指向同一块内存，而深拷贝复制对象本身，创建一个新的内存，修改一个对象不会影响另一个对象。 浅拷贝的属性如果是引用类型，会共享同一个地址，深拷贝的属性如果是引用类型，会拷贝地址指向的内存 引用拷贝顾名思义，即是对引用地址的拷贝，说明引用地址一样，指向堆中的对象是同一个对象。如果对一个对象进行改变，其他对象也会跟着改变。 谈谈对 Java 注解的理解，解决了什么问题？ Exception 和 Error 有什么区别？ 【CSDN】java之异常（Exception）与错误（Error）的区别 Exception:是指程序本身可以处理的异常（可以向上抛出或者捕获处理） Error:程序无法处理，通常指程序中出现的严重问题 Exception（异常）分为两大类：运行异常和编译异常运行异常：顾名思义，是程序运行时才会出现的异常。运行异常是java.lang.RuntimeException类及其子类的统称。如NullPointerException（空指针异常）、IndexOutOfBoundsException（数组下标越界异常）等。运行异常一般是由程序逻辑错误导致的，可以通过捕获处理或向上抛出。运行异常的特点是Java编译器不会检查它，也就是说，当程序中可能出现运行异常，也会被编译通过。编译异常：顾名思义，是程序编译时就会出现的异常。编译异常是java.lang.RuntimeException以外的异常。编译异常必须进行处理，如果不处理，程序就不能编译通过。 Java 反射？反射有什么缺点？你是怎么理解反射的（为什么框架需要反射）？反射的优点： 增加程序的灵活性，避免将程序写死到代码里 代码简洁，提高代码的复用率，外部调用方便 对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法 反射的缺点： 性能问题 安全限制 程序健壮性 Java 泛型了解么？什么是类型擦除？介绍一下常用的通配符？ Java泛型了解么？什么是类型擦除？介绍一下常用的通配符？ Java的泛型是伪泛型，这是因为Java在编译期间，所有的泛型信息都会被擦掉，这也就是通常所说类型擦除。 常用的通配符： ?,T,K,V,E ？ 表示不确定的 java 类型 T (type) 表示具体的一个java类型 K V (key value) 分别代表java键值中的Key Value E (element) 代表Element 内部类了解吗？匿名内部类了解吗？ 【CSDN】Java的内部类和匿名类 ， 您了解过吗？ 内部类：内部类就是类中类，依附于普通类中，可以间接实现Java类的多继承。 成员内部类：就是内部类作为一个成员，存在于类中。实例化方法： 外部类.内部类 内部类对象 = new 外部类().new 内部类(); 静态内部类，在成员内部类的基础上，多了一个static关键字，是静态的类，所有的对象都可以直接通过类名调用。实例化方法： 内部类 内部类对象 = new new 内部类(); 方法内部类，在类的方法中，定义内部类。实例化方法： new 内部类().内部类方法(); 注意只能在当前方法中实例化。 匿名内部类，直接new一个没有名字的类，并且直接调用其中的方法。实例化方法： new 内部类()&#123; ...... &#125;.内部类中的方法(); BIO,NIO,AIO 有什么区别? 【CSDN】BIO、NIO、AIO 有什么区别？ BIO：线程发起IO请求，不管内核是否准备好IO操作，从发起请求起，线程一直阻塞，直到操作完成。 NIO：线程发起IO请求，立即返回；内核在做好IO操作的准备之后，通过调用注册的回调函数通知线程做IO操作，线程开始阻塞，直到操作完成。 AIO：线程发起IO请求，立即返回；内存做好IO操作的准备之后，做IO操作，直到操作完成或者失败，通过调用注册的回调函数通知线程做IO操作完成或者失败。 BIO：同步并阻塞，服务器实现模式为一个连接一个线程，即客户端有连接请求时服务器端就需要启动一个线程进行处理，如果这个连接不做任何事情会造成不必要的线程开销，当然可以通过线程池机制改善。 NIO：同步非阻塞，服务器实现模式为一个请求一个线程，即客户端发送的连接请求都会注册到多路复用器上，多路复用器轮询到连接有I&#x2F;O请求时才启动一个线程进行处理。 AIO：异步非阻塞，服务器实现模式为一个有效请求一个线程，客户端的I&#x2F;O请求都是由OS先完成了再通知服务器应用去启动线程进行处理。","categories":[{"name":"JAVA","slug":"JAVA","permalink":"https://oduoduoke.github.io/categories/JAVA/"}],"tags":[{"name":"面试准备","slug":"面试准备","permalink":"https://oduoduoke.github.io/tags/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/"}]},{"title":"百词斩-记单词0424","slug":"英语学习/百词斩-记单词0424","date":"2023-04-24T00:24:21.000Z","updated":"2023-04-25T14:42:31.057Z","comments":true,"path":"2023/04/24/英语学习/百词斩-记单词0424/","link":"","permalink":"https://oduoduoke.github.io/2023/04/24/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E7%99%BE%E8%AF%8D%E6%96%A9-%E8%AE%B0%E5%8D%95%E8%AF%8D0424/","excerpt":"","text":"数据来源：百词斩APP steak音标：&#x2F;steik&#x2F; 助记词：斯特课 复数形式：steaks 名词（n）： 牛排；鱼块； 图文 12#叉子上叉了两块美味的牛排。There are tow pieces of delicious `steak` on the fork. cough音标：&#x2F;kɔːf&#x2F; 助记词：卡夫 动词（v）：咳嗽 名词（n）：咳嗽 复数：coughs 第三人称单数：coughs 现在分词：coughing 过去式：coughed 过去分词：coughed 12#他生病时咳嗽的厉害He coughed badly when he was ill . pressure音标：&#x2F;ˈpreʃər&#x2F; 助记词：普睿西儿 名词（n）：压力 及物动词（vt）：对…施加压力 复数：pressures 第三人称单数： pressures 现在分词：pressuring 过去式：pressured 过去分词： pressured 12#这个大梨的压力实在是难以承受。The pressure of ths giant pear is unbearable. hinder音标：&#x2F;ˈhɪndər&#x2F; 助记词：哼der 动词（v）：阻碍、妨碍 第三人称单数：hinders 现在分词： hindering 过去式：hindered 过去分词：hindered 12#这个障碍物实在是阻碍我前进The obstacle really `hinders` my forward progress. raw音标：&#x2F;rɔː&#x2F; 助记词：若 形容词（adj）：生的、为煮过的；（因皮肤开裂）疼痛的 比较级：rawer 最高级：rawest 名词：rawness 副词：rawly 12#木板上的牛肉是生的。The beef on the wooden board is `raw`. luggage音标：&#x2F;ˈlʌɡɪdʒ&#x2F; 助记词：拉给及 名词（n）：行李 12#你可以从这些行李箱中选择任意的尺寸和颜色的一个作为你的行李箱。You can choose your `luggage` of any size and color from these ones. extent音标：&#x2F;ɪkˈstent&#x2F; 助记词：一可斯坦特 名词（n）：范围；长度；程度； 12#围栏以内都是我的财产范围。The `extent` of my property is marked by a fence. faulty音标：&#x2F;ˈfɔːlti&#x2F; 助记词：佛提 比较级：faultier 最高级：faultiest 名词：faultiness 副词：faultily 123#快跑！这个烤面包机出故障了，它随时都可能毁了你的面包！Run! This toaster is `faulty` and might kill your toast at any time ! ground音标：&#x2F;ɡraʊnd&#x2F; 助记词：过让得 名词（n）：地面 复数：grounds 第三人称单数：grounds 现在分词：grounding 过去式：grounded 过去分词：grounded 1The man is lying on the `ground`. encounter音标：&#x2F;ɪnˈkaʊntər&#x2F; 助记词：因康特儿 及物动词（vt）：邂逅，偶遇 名词（n）：偶然碰见，遭遇 复数：encounters 第三人称单数：encounters 现在分词：encountering 过去式：encountered 过去分词:encountered 12#他在街上遇到了老朋友。He `encountered` his old friend on the street. reap音标：&#x2F;riːp&#x2F; 助记词：瑞普 动词（v）：收割；获得；收获； 第三人称单数：reaps 现在分词：reaping 过去式：reaped 过去分词：reaped 12#庄稼已经完全成熟，是时候收割了。The crops are fully grown,and it`s time to `reap` them. nutrient音标：&#x2F;ˈnuːtriənt&#x2F; 助记词：牛醉ing嗯特 名词（n）：营养物 形容词（adj）：营养的 复数：nutrients 12#苹果含有许多有益身体健康的营养成分。Apples contain many healthy `nutrients` for the body. fair 音标：&#x2F;fer&#x2F; 助记词：菲尔 形容词（adj）：合理的，公平的；相当的，尚好的 名词（n）：集市，交易会 复数： fairs 第三人称单数：fairs 现在分词：fairing 过去式：faired 过去分词：faired 比较级：fairer 最高级：fairest 12#相比较左边的饮料，右边的饮料售价更合理。Compared to that on the left,the drink on the right is being sold at a `fair` price. bore 音标：&#x2F;bɔːr&#x2F; 助记词：波儿 动词（v）：使厌烦 复数：bores 第三人称单数：bores 现在分词：boring 过去式：bored 过去分词：bored 12#这个男人冗长的讲话让同事们都厌烦的想睡觉了。The man`s endless talking has `bored` his colleagues to sleep. tragedy 音标：&#x2F;ˈtrædʒədi&#x2F; 助记词：tra极地 名词（n）：悲剧 复数：targedies 12#这场车祸对于这个男人来说是场灾难。The car accident was `tragedy` for the man. abundance 音标：&#x2F;əˈbʌndəns&#x2F; 助记词：额班等斯 （a+bun+dan+ce） 名词（n）：大量；丰富 12#这只可爱的小动物有满满一堆的食物。This cute animal has an `abundance` of foood. emphasis音标：&#x2F;ˈemfəsɪs&#x2F; 助记词：嗯fo塞斯（em+pha+sis） 名词（n）：重点；强调；重要性； 复数：emphases 12#标亮单词，以示重点。The word has been highlighted to provide `emphasis`. wage音标：&#x2F;weɪdʒ&#x2F; 助记词：为己 （wa+ge） 名词（n）：工资，薪水 及物动词（vt）：开展，进行（战争、运动） 复数：wages 第三人称单数：wages 现在分词：waging 过去式：waged 过去分词：waged 12#这个工人拿到工资的时候很开心。The worker was so happy when she got her `wages`. conservative音标：&#x2F;kənˈsɜːrvətɪv&#x2F; 助记词：康色五提悟 （con+ser+va+tive） 形容词（adj）：保守的；保守估计的；保守党的 名词（n）：保守者；保守党党员 复数：conservatives 12#这个人的态度如此保守，就连情侣牵手他都看不惯。The man has such a `conservative` attitude; he even despiese the couple holding hands. intermediate音标：&#x2F;ˌɪntərˈmiːdiət&#x2F; 助记词：因特儿米地儿特 （inter+me+di+ate） 形容词（adj）：中间的 名词（n）；媒介 动词（v）：调节，干涉 复数：intermediates 第三人称单数：intermediates 现在分词：intermediating 过去式：intermediated 过去分词：intermediated 12#中间物品的尺寸适中。The toy in the middle is of `intermediate` size. pursue音标：&#x2F;pərˈsuː&#x2F; 助记词：per树 （pur+sue） 动词（v）：追赶；进行，从事 第三人称单数：pursues 现在分词：pursuing 过去式：pursued 过去分词：pursued 12#警察正在追赶那两个小偷，他们偷了一个女人的钱包。The police were `pursuing` the two thieves who had stolen a woman`s purse. urgency音标：&#x2F;ˈɜːrdʒənsi&#x2F; 助记词：儿金塞 （ur+gen+cy） 名词（n）：紧急；紧急的事 12#她急匆匆的跑着，生怕开会迟到。She ran with a sence of `urgency`,afraid of being late for the meeting . extinction音标：&#x2F;ɪkˈstɪŋkʃn&#x2F; 助记词：一可斯滕行 （ex+tin+ction） 名词（n）：灭绝 12#这类动物的灭绝发生在大约6600万年前。The `extinction` of this animal occourred around 66 million years ago. furniture音标：&#x2F;ˈfɜːrnɪtʃər&#x2F; 助记词：fer尼切儿 （fur+ni+ture） 名词（n）：家具；装置；设备 12#他的所有的家具都是成套的。All of his `furniture` came as a set. curb音标：&#x2F;kɜːrb&#x2F; 助记词：可布 （cur+b） 动词（v）：勒住；印制；控制；约束名词（n）：路缘；控制；约束 复数：curbs 第三人称单数：curbs 现在分词：curbing 过去式：curbed 过去分词：curbed 12#在你的马掉下悬崖前，快勒住它！`Curb` your horse now before it runs off ths cliff! analyst音标：&#x2F;ˈænəlɪst&#x2F; 助记词：安no来斯特 （an+a+lyst） 名词（n）：分析员 复数：analysts 12#分析员正在解说股市走向。Ths `analyst` is explaining the trend of ths stock market. loosen音标：&#x2F;ˈluːsn&#x2F; 助记词：路森（loo+sen） 动词（v）：松开；松弛 第三人称单数：loosens 现在分词：loosening 过去式：loosened 过去分词：loosened 12#在办公室工作一天后，我松了松领带。I `loosen` my tie after a long day in the office. appear音标：&#x2F;əˈpɪr&#x2F; 助记词：额皮儿 （app+ear） 不及物动词（vi）：出现，露面 第三人称单数：appears 现在分词：appearing 过去式：appeared 过去分词：appeared 12#我实在太激动了！我的偶像马上就要出现在舞台上了。I`m so excited! My idol is about to `appear` on stage. mortgage音标：&#x2F;ˈmɔːrɡɪdʒ&#x2F; 助记词：莫儿给及 （mort+gage） 名词（n）：抵押贷款 动词（v）：抵押 复数：mortgages 第三人称单数：mortgages 现在分词：mortgaging 过去式：mortgaged 过去分词：mortgaged 12#他办理过抵押贷款，这意味着他是借钱买的房子。He took out a `mortgage`,meaning he borrowed money to buy his home. reply音标：&#x2F;rɪˈplaɪ&#x2F; 助记词：瑞普来 （re+ply） 动词（v）：答复 名词（n）：答复 复数：replies 第三人称单数：replies 现在分词：replying 过去式：replied 过去分词：replied 12#我给她发了好多条消息，她却只回复了一个字。I sent her many messages,but she `replied` with only one word. forgetful音标：&#x2F;fərˈɡetfl&#x2F; 助记词：非儿给特佛 （for+get+ful） 形容词（adj）：健忘的；使遗忘…的 12#这位老人很健忘，他不记得自己在干什么。The old man is so `forgetful` that he can`t remember what he`s doing. theater音标：&#x2F;ˈθiːətər&#x2F; 助记词：非额切儿 （the+a+ter） 复数：theaters 12#表演结束之后，戏院很快就空了。The `theater` quickly emptied when the performance ended. foremost音标：&#x2F;ˈfɔːrmoʊst&#x2F; 助记词：佛儿眸斯特 （for+e+most） 形容词（adj）：首要的 副词（adv）：首先 12#特斯拉被视为他那一代人里最棒的发明家之一。Tesla is regarded as one of the `foremost` inventors of his generation. correspond音标：&#x2F;ˌkɔːrəˈspɑːnd&#x2F; 助记词：扩儿斯棒的 （corr+es+pond） 不及物动词（vi）：通信；相似 第三人称单数：corresponds 现在分词：corresponding 过去式：corresponded 过去分词：corresponded 12#现如今，人们有许多不同的方式进行通信。Nowadays, People `correspond` with each other in many different ways. severe音标：&#x2F;sɪˈvɪr&#x2F; 助记词：赛V儿 （se+ve+re） 形容词（adj）：极为恶劣的；严重的；严厉的；剧烈的 比较级：severer 最高级：severest 12#在如此恶劣的天气条件下，人们走的很艰难。It`s hard for people to wald in such `severe` weather conditions. bug音标：&#x2F;bʌɡ&#x2F; 助记词：巴格 名词（n）：错入，故障 及物动词（vt）：使厌烦 复数：bugs 第三人称单数：bugs 现在分词：bugging 过去式：bugged 过去分词：bugged 12#程序员正在努力修复软件中的故障。The programmer is trying to fix the `bug` in the software. consensus音标：&#x2F;kənˈsensəs&#x2F; 助记词：康森色斯 （con+sen+sus） 名词（n）：一致同意 12#大家就聚餐吃什么问题达成了一致。They reached a `consensus` about what to eat for dinner.","categories":[{"name":"English","slug":"English","permalink":"https://oduoduoke.github.io/categories/English/"}],"tags":[{"name":"百词斩","slug":"百词斩","permalink":"https://oduoduoke.github.io/tags/%E7%99%BE%E8%AF%8D%E6%96%A9/"}]},{"title":"Hexo图片不显示解决","slug":"Hexo博客相关/Hexo图片不显示解决","date":"2023-04-23T13:17:23.000Z","updated":"2023-04-25T14:40:27.312Z","comments":true,"path":"2023/04/23/Hexo博客相关/Hexo图片不显示解决/","link":"","permalink":"https://oduoduoke.github.io/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/Hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E8%A7%A3%E5%86%B3/","excerpt":"","text":"安装插件及页面配置 安装插件 1npm install hexo-renderer-marked 修改hexo根目录配置文件_config.yml 123456#更改hexo设置post_asset_folder: true#添加marked插件设置marked: prependRoot: true postAsset: true 模拟创建新页面 1hexo n testPage 在文件testPage.md中引入图片命令 vscode编辑器中正常预览现实图片 1![](./testPage/test.jpg) hexo发布网页 1![](test.jpg) 模拟创建页面-预览效果截图 Vscode中预览图片展示（图片使用的相对路径） Hexo部署页面打包预览图片不展示 Hexo部署页面打包预览图片展示 日常编辑、发布工作流 备注：在上述插件已经安装且配置文件已如上述所示修改完成后 通过命令 hexo n newPage创建新的页面 复制已创建的newPage文件夹及newPage.md文件到vscode工作目录下 在vscode中正常书写信息、引用相关图片素材资源放置newPage文件夹中 在vscode中完成书写后，复制当前步骤[2]的文件夹及文件到hexo的工作目录下覆盖初始创建的文件夹及目录 全局替换hexo工作目录下newPage.md文件中图片引入代码./newPage/，使其图片目录由![](./newPage/xxx.jpg)为变为![](xxx.jpg) 执行hexo g命令进行打包，运行hexo s命令预览页面 复制hexo工作目录下public下所有资源到相应仓库下进行提交发布即可 补充vscode下编辑md文件的相关插件","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://oduoduoke.github.io/categories/Hexo/"}],"tags":[{"name":"hexo-renderer-marked","slug":"hexo-renderer-marked","permalink":"https://oduoduoke.github.io/tags/hexo-renderer-marked/"}]},{"title":"离职日记 04.23","slug":"离职日记/离职日记-04-23","date":"2023-04-23T11:22:06.000Z","updated":"2023-04-25T14:41:28.930Z","comments":true,"path":"2023/04/23/离职日记/离职日记-04-23/","link":"","permalink":"https://oduoduoke.github.io/2023/04/23/%E7%A6%BB%E8%81%8C%E6%97%A5%E8%AE%B0/%E7%A6%BB%E8%81%8C%E6%97%A5%E8%AE%B0-04-23/","excerpt":"","text":"昨天晚上是10:30样子睡觉的吧，然后今天早上很早就醒了。我看了下手环上的时间，我都觉得惊讶…基本上现在10点多开始休息，然后早上基本在05:30左右样子就会醒来的，生物钟的习惯已养成~ 因为昨天晚上回家的时候外边有一点在下小雨，所以就没有去小区门口的的面包店买面包，所以上午的早饭是去菁英公寓旁边的和善园买的梅干菜肉包*2，就着之前搞活动花1元领的牛奶吃的早饭。 今天早上起来就开始在研究Hexo搭建个人博客的，稍微花了一些时间整理了初版的第一份教程，后面时间赋予下来还是会把后续相关的给完善的。目前写博客是分两份，一份是私有仓库备份，一份是公开仓库做个人博客记录。 下午的话，原本出去吃了个面条回来，正常来说我应该是准备午休的咯！ 我看见手机上有一个未接来电，因为我没有备注是谁，然后我就打回去了，发现是BOSS，他说我为啥两面三刀的，难道不晓得现在公司多忙嘛？然后叫我把离职前还剩下一点的项目给做完。我当时人都傻了，就这？？？我之前产品-胡、人事-荆联系我说这个事情的时候，我说了我离职了已经，并且我不愿意干开发的工作的，结果没想到BOSS来压我了。就因为我心里对公司有愧疚基于那次重大事故的原因！我也想好了，我后续不会在接公司兼职给我的开发外包、运维兼职的工作先做两个月在找到新工作之后交付出去给前通知运维-徐来兼职接手吧。我当时第一反应就是觉得很不爽，我都离职了，我还要把离职前没做完的工作给做了？ 确实如此！后面的话把ylfpay-裂变项目的剩下的功能（云平台提现、二维码生成）代码实现了，就直接给当前技术部项目主管-郝说了这件事情了。算是把自己要写的功能也补全了，撇干净自己和公司的关系。 今天的话倒是其他的工作没怎么做，正好的是昨天毕业答辩回来之后就把答辩老师提出的论文修改部分给完善了，今天刚刚好这边老师在问我们要修改后的论文，如果昨天回来懒了没有动，那估计这件事情就又往后面拖了，拖延症要不得！！！ 今天下午在写代码空隙休息时间还给老妈开了下视频，也讲了下5.1就不回去了，就在这边呆着反正交了房租的，还有就是回去的话也是没啥好耍的，也耍不长久，家里房子租出去了的，即使说能在家里住也是短住几天，没有那个必要的。就在NJ这边好好呆着吧~顺便把简历准备好，面试准备知识点背背之类的，争取就是一个月之内把工作事情给落实了。 今天外边在下小雨，原本说准备晚上出去吃的，后面看着雨一直没停就懒得出门了，晚上给自己点了一个外卖。然后我这次买了吐司面包回来，明天早上就不用出门买早饭了的打算。 我感觉哈，这家外卖不好吃，味道一般，然后价格的话只能说正常区间用完卷￥21.98，意面没味道很淡、然后那个烤饼的话感觉肉一般，芝士香气挺浓郁的，里面还有玉米粒很甜。总是给不到预期的感受，我的评分是※※※（满分5※）","categories":[{"name":"离职日记","slug":"离职日记","permalink":"https://oduoduoke.github.io/categories/%E7%A6%BB%E8%81%8C%E6%97%A5%E8%AE%B0/"}],"tags":[]},{"title":"基于Hexo+GitHub Page搭建个人博客","slug":"Hexo博客相关/基于Hexo-GitHub-Page搭建个人博客","date":"2023-04-23T01:17:48.000Z","updated":"2023-04-25T14:40:50.410Z","comments":true,"path":"2023/04/23/Hexo博客相关/基于Hexo-GitHub-Page搭建个人博客/","link":"","permalink":"https://oduoduoke.github.io/2023/04/23/Hexo%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/%E5%9F%BA%E4%BA%8EHexo-GitHub-Page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"本次教程参考资料： 手把手教你使用Hexo + Github Pages搭建个人独立博客我是如何利用Github Pages搭建起我的博客，细数一路的坑 搭建Hexo博客 Node.js下载安装 Git下载安装 安装Hexo 3.1 Windows下用CMD命令窗口打开 3.2 安装Hexo模块 12npm install hexo-cli -g #将模块全局安装npm install hexo-cli --save #将模块安装到项目目录下 3.3 初始化Hexo 1234hexo init blog #初始化博客目录（&#x27;blog&#x27;可修改其他名称）cd blognpm install #安装依赖配置 3.4 启动Hexo 12hexo g # 或者hexo generatehexo s # 或者hexo server 启动完成后，可以在[http://localhost:4000/](http://localhost:4000/) 进行查看 命令解释： hexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹 hexo server (hexo s) 启动本地web服务，用于博客的预览 hexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台） hexo new “postName” (hexo n) #新建文章 hexo new page “pageName” #新建页面 3.5 常用组合命令 12hexo s -g #生成预览hexo d -g #生成部署 Hexo主题设置 安装主题12hexo cleangit clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 启用主题 修改Hexo目录下的_config.yml配置文件中的theme属性，将其设置为yilia 更新主题并启动Hexo1234cd themes/yiliagit pullhexo ghexo s Github Pages 创建GitHub Page仓库 开启GitHub Page仓库 进入设置 确认仓库站点是否开通（一般是默认开通的） 部署Hexo到GitHub Page仓库 使用Hexo deploy部署 12#需要安装扩展npm install hexo-deployer-git --save 修改_config.xml配置文件 对应blog根目录：D:\\workSpace\\Test\\TestHexo\\blog\\_config.xml 原配置文件截图: 修改后配置文件截图： 执行部署命令 1hexo d 使用Git 命令部署 克隆当前仓库到目录 1git clone xxxabc.git .deploy/xxxabc deply脚本 用于Linux环境下一键部署发布Hexo到GitHub Page仓库 123456hexo generatecp -R public/* .deploy/xxxabccd .deploy/xxxabcgit add .git commit -m “update”git push origin master 通过hexo g在public下生成新的待发布页面，通过命令copy到克隆下的仓库中，在通过git命令进行push到远端仓库进行发布","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://oduoduoke.github.io/categories/Hexo/"}],"tags":[]},{"title":"离职日记 04.22","slug":"离职日记/离职日记-04-22","date":"2023-04-22T11:22:06.000Z","updated":"2023-04-25T14:41:17.834Z","comments":true,"path":"2023/04/22/离职日记/离职日记-04-22/","link":"","permalink":"https://oduoduoke.github.io/2023/04/22/%E7%A6%BB%E8%81%8C%E6%97%A5%E8%AE%B0/%E7%A6%BB%E8%81%8C%E6%97%A5%E8%AE%B0-04-22/","excerpt":"","text":"离职日记 0422（第一天）第一小节今天早上是05点多样子就醒了吧，然后定的闹钟是06点的都没有用到起，我起来洗了个头，毕竟今天是毕业设计答辩嘛，我是7点不到就出门了，等到了小区门口站台哪里，然后111路公交车来的比88路早，我就坐的111路公交车，等111路坐到西云村北 公交站，然后我因为没有吃早饭嘛，我看见旁边有包子店，我就去买了早餐排了会队，结果后面步行过去换成的公交站的时候，我要乘坐的110路公交车才走！！！没办法就是最后我选择换乘其他路线公交车过去的，原本正常110路公交车就基本属于可以直达了嘛。…早知道不吃早饭的。 第二小节等我坐到那边下车的时候，我发现了就是旁边路边开的花好好看啊，我还特意拍了几张照片的。虽然我手机镜头模组哪里已经很花了，不过还是勉勉强强可以看的。 第三小节我基本是在8:40样子到的教室，当时已经基本到了很多人了都。 原本我是准备说不要学位证的，应该是很简单的，后面想到起如果有学位证的话 可能作用会比只有一个毕业证大很多的。原本是easy模式，我准备要毕业证就开启difficult模式了:disappointed_relieved:。我应该是10：45样子进去开始答辩的，学号顺序叫人的，我是在340这个尾号，因为我需要学位嘛，感觉就是不像是其他不要学位的容易，老师还是问了一些问题的，最开始她可能理解有误，以为是啥子app视频软件这种类似的，后面在我的解释之下理解了，是包场地这种私人空间影院的形式观影的。还给我提出了论文需要修改的指导性意见，嗯 是的，意味着我有二次答辩的机会（虽然我不想有，不过自己也想清楚了的，就是因为我本来这个写的就有不够完善的地方，老师提出的指导性意见不是针对我，是针对我的论文来的），后面还要准备的就是学位基础课、学位英语的考试，我问过我报名的那个老师了，1年之内考过了就可以拿学位证了的。毕竟我还年轻，趁早把这些都准备好才是真的！ 我的朋友黄汝丽就是都30了，现在我在想她找工作及时是本科也很难的（况且她这个本科还没毕业）。 第四小节在回程的公交车上，我接到了JMT-人事给我打的电话，询问了我关于不接外包开发工作的事项及确认我如果做兼职运维能做多长时间的这个事。原本就是还有一点项目没有做完，公司的意思是我继续把它搞定，但是我觉得我是已经离职了的，我可以不用去做这些，而且 我想的很清楚，虽然是说公司可以把兼职开发的工作给到我做，但是如果这些项目后续开发完成之后仍需要修改或者是如何，那么还是会涉及到我这边，我觉得和JMT保持密切的合作关系是不可取的，不是说不能带来实际性的收益，但是如果这样做了，我感觉我会更难从这里面撤离出来。 第五小节今天回家了之后，还是老样子去那边菜市场旁边的重庆小面吃了一份豌杂面，后面回来之后歇了一会就躺着午休了的，下午14:40左右起来的，果然还是午休之后精神充沛！后面起来之后呢就是在弄毕业论文，针对今天答辩老师提出的修改意见做出了一些调整，以便后续第二次答辩的时候可以顺利通过。 第六小节下午大概4点多样子，和欧阳讨论了下YLFPAY-裂变版本，就是我离职之前经手的项目一些需求上的问题，后面的话因为好像自己又留了小坑在里面，就请欧阳顺便吃了个晚饭出来。 第七小节晚上的话，研究了下github的page页面部署个人博客的事项，给我的感觉就是 我这边提交了代码，github的page页面隔了很久才刷新出来。就因为这个延时的关系，我一直以为我这部署提交代码没有效果呢！还研究了下如何本地配置管理多个git-ssh的令牌，顺便把之前JMT的gitlab的ssh配置删除了。 我想我应不会在有和原公司项目有关联了。","categories":[{"name":"离职日记","slug":"离职日记","permalink":"https://oduoduoke.github.io/categories/%E7%A6%BB%E8%81%8C%E6%97%A5%E8%AE%B0/"}],"tags":[]},{"title":"git 拉取远端所有分支","slug":"GIT相关/Git拉取远端所有分支","date":"2023-04-21T11:22:06.000Z","updated":"2023-04-25T14:37:36.009Z","comments":true,"path":"2023/04/21/GIT相关/Git拉取远端所有分支/","link":"","permalink":"https://oduoduoke.github.io/2023/04/21/GIT%E7%9B%B8%E5%85%B3/Git%E6%8B%89%E5%8F%96%E8%BF%9C%E7%AB%AF%E6%89%80%E6%9C%89%E5%88%86%E6%94%AF/","excerpt":"","text":"CSDN博客原文参考地址 关键命令代码 git branch -r | grep -v ‘-&gt;’ | while read remote; do git branch –track “${remote#origin&#x2F;}” “$remote”; donegit fetch –allgit pull –all 操作步骤截图通过 git bash 窗口输入git clone 命令 克隆项目到本地 进入项目 jmt_lp 文件夹目录下 执行以下命令git branch -r | grep -v &#39;\\-&gt;&#39; | while read remote; do git branch --track &quot;$&#123;remote#origin/&#125;&quot; &quot;$remote&quot;; done git fetch --all git pull --all 下载所有分支代码 打开Idea查看项目所有分支代码下载结果","categories":[{"name":"GIT","slug":"GIT","permalink":"https://oduoduoke.github.io/categories/GIT/"}],"tags":[{"name":"GIT","slug":"GIT","permalink":"https://oduoduoke.github.io/tags/GIT/"}]}],"categories":[{"name":"个人心情","slug":"个人心情","permalink":"https://oduoduoke.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%BF%83%E6%83%85/"},{"name":"离职日记","slug":"离职日记","permalink":"https://oduoduoke.github.io/categories/%E7%A6%BB%E8%81%8C%E6%97%A5%E8%AE%B0/"},{"name":"Hexo","slug":"Hexo","permalink":"https://oduoduoke.github.io/categories/Hexo/"},{"name":"English","slug":"English","permalink":"https://oduoduoke.github.io/categories/English/"},{"name":"JAVA","slug":"JAVA","permalink":"https://oduoduoke.github.io/categories/JAVA/"},{"name":"GIT","slug":"GIT","permalink":"https://oduoduoke.github.io/categories/GIT/"}],"tags":[{"name":"Windowsin系统bat脚本","slug":"Windowsin系统bat脚本","permalink":"https://oduoduoke.github.io/tags/Windowsin%E7%B3%BB%E7%BB%9Fbat%E8%84%9A%E6%9C%AC/"},{"name":"hexo-generator-searchdb","slug":"hexo-generator-searchdb","permalink":"https://oduoduoke.github.io/tags/hexo-generator-searchdb/"},{"name":"百词斩","slug":"百词斩","permalink":"https://oduoduoke.github.io/tags/%E7%99%BE%E8%AF%8D%E6%96%A9/"},{"name":"面试准备","slug":"面试准备","permalink":"https://oduoduoke.github.io/tags/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/"},{"name":"hexo-renderer-marked","slug":"hexo-renderer-marked","permalink":"https://oduoduoke.github.io/tags/hexo-renderer-marked/"},{"name":"GIT","slug":"GIT","permalink":"https://oduoduoke.github.io/tags/GIT/"}]}